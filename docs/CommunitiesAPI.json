{
   "service" : {
      "name" : "MG-RAST",
      "url" : "http://kbase.us/services/communities/1",
      "description" : "<p>The MG-RAST API covers most of the functionality available through the MG-RAST website, with access to annotations, analyses, metadata and access to the MG-RAST user inbox to view contents as well as upload files. All sequence data and data products from intermediate stages in the analysis pipeline are available for download. Other resources provide services not available through the website, e.g. the m5nr resource lets you query the m5nr database.</p><p>Each query to the API is represented as a URI beginning with \"http://kbase.us/services/communities/\" and has a defined structure to pass the requests and parameters to the API server.</p><p>The URI queries can be used from the command line, e.g. using curl, in a browser, or incorporated in a shell script or program.</p><p>Each URI has the form</p><pre>\"http://kbase.us/services/communities/{version}/{resourcepath}?{querystring}\"</pre><p>The {version} value (currently '1') explicitly directs the request to a specific version of the API, if it is omitted the latest API version will be used.</p><p>The resource path is constructed from the path parameters listed below to define a specific resource and the optional query string is used to filter the results obtained for the resource. For example:</p><pre>http://kbase.us/services/communities/1/annotation/sequence/mgm4447943.3?evalue=10&type=organism&source=SwissProt</pre><p>In this example the resource path \"annotation/sequence/mgm4447943.3\" defines a request for the annotated sequences for the MG-RAST job with ID 4447943.3.</p><p>The optional query string \"evalue=10&type=organism&source=SwissProt\" modifies the results by setting an evalue cutoff, annotation type and database source.</p><p>The API provides an authentication mechanism for access to private MG-RAST jobs and users' inbox. The 'auth_key' (or 'webkey') is a 25 character long string  (e.g. 'j6FNL61ekNarTgqupMma6eMx5') which is used by the API to identify an MG-RAST user account and determine access rights to metagenomes. Note that the auth_key is valid for a limited time after which queries using the key will be rejected. You can create a new auth_key or view the expiration date and time of an existing auth_key on the MG-RAST website. An account can have only one valid auth_key and creating a new key will invalidate an existing key.</p><p>All public data in MG-RAST is available without an auth_key. All API queries for private data which either do not have an auth_key or use an invalid or expired auth_key will get a \"insufficient permissions to view this data\" response.</p><p>The auth_key can be included in the query string like:</p><pre>\nhttp://kbase.us/services/communities/1/annotation/sequence/mgm4447943.3?evalue=10&type=organism&source=SwissProt&auth=j6FNL61ekNarTgqupMma6eMx5</pre><p>or in a request using curl like:</p><pre>curl -X GET -H \"auth: j6FNL61ekNarTgqupMma6eMx5\" \"http://kbase.us/services/communities/1/annotation/sequence/mgm4447943.3?evalue=10&type=organism&source=SwissProt\"</pre><p>Note that for the curl command the quotes are necessary for the query to be passed to the API correctly.</p><p>If an optional parameter passed through the query string has a list of values only the first will be used. When multiple values are required, e.g. for multiple md5 checksum values, they can be passed to the API like:</p><pre>curl -X POST -d '{\"data\":[\"000821a2e2f63df1a3873e4b280002a8\",\"15bf1950bd9867099e72ea6516e3d602\"]}' \"http://kbase.us/services/communities/m5nr/md5\"</pre><p>In some cases, the data requested is in the form of a list with a large number of entries. In these cases the limit and offset parameters can be used to step through the list, for example:</p><pre>http://kbase.us/services/communities/1/project?order=name&limit=20&offset=100</pre><p>will limit the number of entries returned to 20 with an offset of 100. If these parameters are not provided default values of limit=10 and offset=0 are used. The returned JSON structure will contain the 'next' and 'prev' (previous) URIs to simplify stepping through the list.</p><p>The data returned may be plain text, compressed gzipped files or a JSON structure.</p><p>Most API queries are 'synchronous' and results are returned immediately. Some queries may require a substantial time to compute results, in these cases you can select the asynchronous option by adding '&asynchronous=1' to the end of the query string. This query will then return a URL which will return the query results when they are ready.</p>",
      "version" : 1
   },
   "resources" : [
      {
         "documentation" : "http://kbase.us/services/communities/1/api.html#annotation",
         "name" : "annotation",
         "url" : "http://kbase.us/services/communities/1/annotation",
         "description" : "All annotations of a metagenome for a specific annotation type and source",
         "type" : "object",
         "requests" : [
            {
               "attributes" : "self",
               "name" : "info",
               "method" : "GET",
               "parameters" : {
                  "body" : {},
                  "options" : {},
                  "required" : {}
               },
               "type" : "synchronous",
               "description" : "Returns description of parameters and attributes.",
               "request" : "http://kbase.us/services/communities/1/annotation"
            },
            {
               "name" : "sequence",
               "example" : [
                  "http://kbase.us/services/communities/1/annotation/sequence/mgm4447943.3?evalue=10&type=organism&source=SwissProt",
                  "all annotated read sequences from mgm4447943.3 with hits in SwissProt organisms at evalue < e-10"
               ],
               "attributes" : {
                  "streaming text" : [
                     "object",
                     [
                        {
                           "col_02" : [
                              "string",
                              "m5nr id (md5sum)"
                           ],
                           "col_04" : [
                              "string",
                              "semicolon separated list of annotations"
                           ],
                           "col_01" : [
                              "string",
                              "sequence id"
                           ],
                           "col_03" : [
                              "string",
                              "dna sequence"
                           ]
                        },
                        "tab delimited annotated sequence stream"
                     ]
                  ]
               },
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/annotation/sequence/{ID}",
               "type" : "stream",
               "parameters" : {
                  "options" : {
                     "filter_level" : [
                        "string",
                        "hierarchal level to filter annotations by, for organism or ontology only"
                     ],
                     "type" : [
                        "cv",
                        [
                           [
                              "organism",
                              "return organism data"
                           ],
                           [
                              "function",
                              "return function data"
                           ],
                           [
                              "ontology",
                              "return ontology data"
                           ],
                           [
                              "feature",
                              "return feature data"
                           ],
                           [
                              "md5",
                              "return md5sum data"
                           ]
                        ]
                     ],
                     "length" : [
                        "int",
                        "value for minimum alignment length cutoff: default is 15"
                     ],
                     "source" : [
                        "cv",
                        [
                           [
                              "RefSeq",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "GenBank",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "IMG",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "SEED",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "TrEMBL",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "SwissProt",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "PATRIC",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "KEGG",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "RDP",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "Greengenes",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "LSU",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "SSU",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "Subsystems",
                              "ontology database, type ontology only"
                           ],
                           [
                              "NOG",
                              "ontology database, type ontology only"
                           ],
                           [
                              "COG",
                              "ontology database, type ontology only"
                           ],
                           [
                              "KO",
                              "ontology database, type ontology only"
                           ]
                        ]
                     ],
                     "filter" : [
                        "string",
                        "text string to filter annotations by: only return those that contain text"
                     ],
                     "identity" : [
                        "int",
                        "percent value for minimum % identity cutoff: default is 60"
                     ],
                     "evalue" : [
                        "int",
                        "negative exponent value for maximum e-value cutoff: default is 5"
                     ]
                  },
                  "required" : {
                     "id" : [
                        "string",
                        "unique metagenome identifier"
                     ]
                  },
                  "body" : {}
               },
               "description" : "tab delimited annotated sequence stream"
            },
            {
               "example" : [
                  "http://kbase.us/services/communities/1/annotation/similarity/mgm4447943.3?identity=80&type=function&source=KO",
                  "all annotated read blat stats from mgm4447943.3 with hits in KO functions at % identity > 80"
               ],
               "attributes" : {
                  "streaming text" : [
                     "object",
                     [
                        {
                           "col_10" : [
                              "int",
                              "hit end"
                           ],
                           "col_02" : [
                              "string",
                              "hit m5nr id (md5sum)"
                           ],
                           "col_08" : [
                              "int",
                              "query end"
                           ],
                           "col_04" : [
                              "int",
                              "alignment length,"
                           ],
                           "col_05" : [
                              "int",
                              "number of mismatches"
                           ],
                           "col_01" : [
                              "string",
                              "query sequence id"
                           ],
                           "col_12" : [
                              "float",
                              "bit score"
                           ],
                           "col_06" : [
                              "int",
                              "number of gap openings"
                           ],
                           "col_09" : [
                              "int",
                              "hit start"
                           ],
                           "col_13" : [
                              "string",
                              "semicolon separated list of annotations"
                           ],
                           "col_11" : [
                              "float",
                              "e-value"
                           ],
                           "col_07" : [
                              "int",
                              "query start"
                           ],
                           "col_03" : [
                              "float",
                              "percentage identity"
                           ]
                        },
                        "tab delimited blast m8 with annotation"
                     ]
                  ]
               },
               "name" : "similarity",
               "method" : "GET",
               "type" : "stream",
               "request" : "http://kbase.us/services/communities/1/annotation/similarity/{ID}",
               "parameters" : {
                  "body" : {},
                  "required" : {
                     "id" : [
                        "string",
                        "unique metagenome identifier"
                     ]
                  },
                  "options" : {
                     "length" : [
                        "int",
                        "value for minimum alignment length cutoff: default is 15"
                     ],
                     "type" : [
                        "cv",
                        [
                           [
                              "organism",
                              "return organism data"
                           ],
                           [
                              "function",
                              "return function data"
                           ],
                           [
                              "ontology",
                              "return ontology data"
                           ],
                           [
                              "feature",
                              "return feature data"
                           ],
                           [
                              "md5",
                              "return md5sum data"
                           ]
                        ]
                     ],
                     "source" : [
                        "cv",
                        [
                           [
                              "RefSeq",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "GenBank",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "IMG",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "SEED",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "TrEMBL",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "SwissProt",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "PATRIC",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "KEGG",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "RDP",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "Greengenes",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "LSU",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "SSU",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "Subsystems",
                              "ontology database, type ontology only"
                           ],
                           [
                              "NOG",
                              "ontology database, type ontology only"
                           ],
                           [
                              "COG",
                              "ontology database, type ontology only"
                           ],
                           [
                              "KO",
                              "ontology database, type ontology only"
                           ]
                        ]
                     ],
                     "filter_level" : [
                        "string",
                        "hierarchal level to filter annotations by, for organism or ontology only"
                     ],
                     "identity" : [
                        "int",
                        "percent value for minimum % identity cutoff: default is 60"
                     ],
                     "evalue" : [
                        "int",
                        "negative exponent value for maximum e-value cutoff: default is 5"
                     ],
                     "filter" : [
                        "string",
                        "text string to filter annotations by: only return those that contain text"
                     ]
                  }
               },
               "description" : "tab delimited blast m8 with annotation"
            }
         ]
      },
      {
         "requests" : [
            {
               "attributes" : "self",
               "name" : "info",
               "description" : "Returns description of parameters and attributes.",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/compute",
               "method" : "GET",
               "parameters" : {
                  "required" : {},
                  "options" : {},
                  "body" : {}
               }
            },
            {
               "parameters" : {
                  "required" : {
                     "id" : [
                        "string",
                        "unique object identifier"
                     ]
                  },
                  "options" : {
                     "source" : [
                        "cv",
                        [
                           [
                              "RefSeq",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "GenBank",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "IMG",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "SEED",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "TrEMBL",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "SwissProt",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "PATRIC",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "KEGG",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "RDP",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "Greengenes",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "LSU",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "SSU",
                              "RNA database, type organism, function, feature"
                           ]
                        ]
                     ],
                     "level" : [
                        "cv",
                        [
                           [
                              "strain",
                              "bottom organism taxonomic level"
                           ],
                           [
                              "species",
                              "organism type level"
                           ],
                           [
                              "genus",
                              "organism taxonomic level"
                           ],
                           [
                              "family",
                              "organism taxonomic level"
                           ],
                           [
                              "order",
                              "organism taxonomic level"
                           ],
                           [
                              "class",
                              "organism taxonomic level"
                           ],
                           [
                              "phylum",
                              "organism taxonomic level"
                           ],
                           [
                              "domain",
                              "top organism taxonomic level"
                           ]
                        ]
                     ]
                  },
                  "body" : {}
               },
               "description" : "Calculate alpha diversity value for given ID and taxon level.",
               "method" : "GET",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/compute/alphadiversity/{ID}",
               "example" : [
                  "http://kbase.us/services/communities/1/compute/alphadiversity/mgm4447943.3?level=order",
                  "retrieve alpha diversity for order taxon"
               ],
               "attributes" : {
                  "data" : [
                     "float",
                     "alpha diversity value"
                  ],
                  "id" : [
                     "string",
                     "unique metagenome identifier"
                  ],
                  "url" : [
                     "string",
                     "resource location of this object instance"
                  ]
               },
               "name" : "alphadiversity"
            },
            {
               "name" : "normalize",
               "example" : [
                  "curl -X POST -d '{\"columns\": [\"mgm4441619.3\",\"mgm4441656.4\",\"mgm4441680.3\",\"mgm4441681.3\"], \"rows\": [\"Eukaryota\",\"Bacteria\",\"Archaea\"], \"data\": [[135,410,848,1243],[4397,6529,71423,204413],[1422,2156,874,1138]]}' \"http://kbase.us/services/communities/1/compute/normalize\"",
                  "retrieve normalized values for input abundances"
               ],
               "attributes" : {
                  "data" : [
                     "list",
                     [
                        "list",
                        [
                           "float",
                           "normalized value"
                        ]
                     ]
                  ],
                  "rows" : [
                     "list",
                     [
                        "string",
                        "row id"
                     ]
                  ],
                  "columns" : [
                     "list",
                     [
                        "string",
                        "column id"
                     ]
                  ]
               },
               "method" : "POST",
               "request" : "http://kbase.us/services/communities/1/compute/normalize",
               "type" : "synchronous",
               "parameters" : {
                  "body" : {
                     "columns" : [
                        "list",
                        [
                           "string",
                           "column id"
                        ]
                     ],
                     "norm" : [
                        "cv",
                        [
                           [
                              "DESeq_blind",
                              "DESeq_blind normalization method"
                           ],
                           [
                              "standardize",
                              "standardize normalization method"
                           ],
                           [
                              "quantile",
                              "quantile normalization method"
                           ],
                           [
                              "DESeq_per_condition",
                              "DESeq_per_condition normalization method"
                           ],
                           [
                              "DESeq_pooled",
                              "DESeq_pooled normalization method"
                           ],
                           [
                              "DESeq_pooled_CR",
                              "DESeq_pooled_CR normalization method"
                           ]
                        ]
                     ],
                     "rows" : [
                        "list",
                        [
                           "string",
                           "row id"
                        ]
                     ],
                     "data" : [
                        "list",
                        [
                           "list",
                           [
                              "int",
                              "raw value"
                           ]
                        ]
                     ]
                  },
                  "options" : {},
                  "required" : {}
               },
               "description" : "Calculate normalized values for given input data."
            },
            {
               "parameters" : {
                  "body" : {
                     "groups" : [
                        "list",
                        [
                           "string",
                           "group name"
                        ]
                     ],
                     "raw" : [
                        "boolean",
                        "option to use raw data (not normalize)"
                     ],
                     "test" : [
                        "cv",
                        [
                           [
                              "Kruskal-Wallis",
                              "Kruskal-Wallis significance testing method"
                           ],
                           [
                              "t-test-paired",
                              "t-test-paired significance testing method"
                           ],
                           [
                              "Wilcoxon-paired",
                              "Wilcoxon-paired significance testing method"
                           ],
                           [
                              "t-test-unpaired",
                              "t-test-unpaired significance testing method"
                           ],
                           [
                              "Mann-Whitney-unpaired-Wilcoxon",
                              "Mann-Whitney-unpaired-Wilcoxon significance testing method"
                           ],
                           [
                              "ANOVA-one-way",
                              "ANOVA-one-way significance testing method"
                           ]
                        ]
                     ],
                     "columns" : [
                        "list",
                        [
                           "string",
                           "column id"
                        ]
                     ],
                     "norm" : [
                        "cv",
                        [
                           [
                              "DESeq_blind",
                              "DESeq_blind normalization method"
                           ],
                           [
                              "standardize",
                              "standardize normalization method"
                           ],
                           [
                              "quantile",
                              "quantile normalization method"
                           ],
                           [
                              "DESeq_per_condition",
                              "DESeq_per_condition normalization method"
                           ],
                           [
                              "DESeq_pooled",
                              "DESeq_pooled normalization method"
                           ],
                           [
                              "DESeq_pooled_CR",
                              "DESeq_pooled_CR normalization method"
                           ]
                        ]
                     ],
                     "rows" : [
                        "list",
                        [
                           "string",
                           "row id"
                        ]
                     ],
                     "data" : [
                        "list",
                        [
                           "list",
                           [
                              "int",
                              "raw value"
                           ]
                        ]
                     ]
                  },
                  "options" : {},
                  "required" : {}
               },
               "description" : "Calculate significance values for given input data.",
               "attributes" : {
                  "rows" : [
                     "list",
                     [
                        "string",
                        "row name"
                     ]
                  ],
                  "data" : [
                     "list",
                     [
                        "list",
                        [
                           "float",
                           "significance value"
                        ]
                     ]
                  ],
                  "columns" : [
                     "list",
                     [
                        "string",
                        "column name"
                     ]
                  ]
               },
               "example" : [
                  "curl -X POST -d '{\"test\":\"Kruskal-Wallis\",\"groups\":[\"whale\",\"whale\",\"cow\",\"cow\"],\"columns\": [\"mgm4441619.3\",\"mgm4441656.4\",\"mgm4441680.3\",\"mgm4441681.3\"], \"rows\": [\"Eukaryota\",\"Bacteria\",\"Archaea\"], \"data\": [[135,410,848,1243],[4397,6529,71423,204413],[1422,2156,874,1138]]}' \"http://kbase.us/services/communities/1/compute/significance\"",
                  "retrieve significance values for input abundances and groups using the 'Kruskal-Wallis' significance test"
               ],
               "name" : "significance",
               "method" : "POST",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/compute/significance"
            },
            {
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/compute/heatmap",
               "method" : "POST",
               "example" : [
                  "curl -X POST -d '{\"raw\":0,\"cluster\":\"mcquitty\",\"columns\": [\"mgm4441619.3\",\"mgm4441656.4\",\"mgm4441680.3\",\"mgm4441681.3\"], \"rows\": [\"Eukaryota\",\"Bacteria\",\"Archaea\"], \"data\": [[135,410,848,1243],[4397,6529,71423,204413],[1422,2156,874,1138]]}' \"http://kbase.us/services/communities/1/compute/heatmap\"",
                  "retrieve dendrogram of normalized input abundances using 'mcquitty' cluster method"
               ],
               "attributes" : {
                  "coldend" : [
                     "object",
                     "dendrogram object for columns"
                  ],
                  "rows" : [
                     "list",
                     [
                        "string",
                        "row id"
                     ]
                  ],
                  "colindex" : [
                     "list",
                     [
                        "float",
                        "column id index"
                     ]
                  ],
                  "data" : [
                     "list",
                     [
                        "list",
                        [
                           "float",
                           "normalized value"
                        ]
                     ]
                  ],
                  "rowindex" : [
                     "list",
                     [
                        "float",
                        "row id index"
                     ]
                  ],
                  "columns" : [
                     "list",
                     [
                        "string",
                        "column id"
                     ]
                  ],
                  "rowdend" : [
                     "object",
                     "dendrogram object for rows"
                  ]
               },
               "name" : "heatmap",
               "description" : "Calculate a dendrogram for given input data.",
               "parameters" : {
                  "required" : {},
                  "options" : {},
                  "body" : {
                     "columns" : [
                        "list",
                        [
                           "string",
                           "column id"
                        ]
                     ],
                     "raw" : [
                        "boolean",
                        "option to use raw data (not normalize)"
                     ],
                     "cluster" : [
                        "cv",
                        [
                           [
                              "ward",
                              "ward cluster method"
                           ],
                           [
                              "single",
                              "single cluster method"
                           ],
                           [
                              "complete",
                              "complete cluster method"
                           ],
                           [
                              "mcquitty",
                              "mcquitty cluster method"
                           ],
                           [
                              "median",
                              "median cluster method"
                           ],
                           [
                              "centroid",
                              "centroid cluster method"
                           ]
                        ]
                     ],
                     "distance" : [
                        "cv",
                        [
                           [
                              "bray-curtis",
                              "bray-curtis distance method"
                           ],
                           [
                              "euclidean",
                              "euclidean distance method"
                           ],
                           [
                              "maximum",
                              "maximum distance method"
                           ],
                           [
                              "manhattan",
                              "manhattan distance method"
                           ],
                           [
                              "canberra",
                              "canberra distance method"
                           ],
                           [
                              "minkowski",
                              "minkowski distance method"
                           ],
                           [
                              "difference",
                              "difference distance method"
                           ]
                        ]
                     ],
                     "data" : [
                        "list",
                        [
                           "list",
                           [
                              "float",
                              "raw or normalized value"
                           ]
                        ]
                     ],
                     "norm" : [
                        "cv",
                        [
                           [
                              "DESeq_blind",
                              "DESeq_blind normalization method"
                           ],
                           [
                              "standardize",
                              "standardize normalization method"
                           ],
                           [
                              "quantile",
                              "quantile normalization method"
                           ],
                           [
                              "DESeq_per_condition",
                              "DESeq_per_condition normalization method"
                           ],
                           [
                              "DESeq_pooled",
                              "DESeq_pooled normalization method"
                           ],
                           [
                              "DESeq_pooled_CR",
                              "DESeq_pooled_CR normalization method"
                           ]
                        ]
                     ],
                     "rows" : [
                        "list",
                        [
                           "string",
                           "row id"
                        ]
                     ]
                  }
               }
            },
            {
               "attributes" : {
                  "pco" : [
                     "list",
                     [
                        "float",
                        "average principal component value"
                     ]
                  ],
                  "data" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "pco" : [
                                 "list",
                                 [
                                    "float",
                                    "principal component value"
                                 ]
                              ],
                              "id" : [
                                 "string",
                                 "column id"
                              ]
                           },
                           "pcoa object"
                        ]
                     ]
                  ]
               },
               "example" : [
                  "curl -X POST -d '{\"raw\":1,\"distance\":\"euclidean\",\"columns\": [\"mgm4441619.3\",\"mgm4441656.4\",\"mgm4441680.3\",\"mgm4441681.3\"], \"rows\": [\"Eukaryota\",\"Bacteria\",\"Archaea\"], \"data\": [[135,410,848,1243],[4397,6529,71423,204413],[1422,2156,874,1138]]}' \"http://kbase.us/services/communities/1/compute/pcoa\"",
                  "retrieve PCO of raw input abundances using 'euclidean' distance method"
               ],
               "name" : "pcoa",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/compute/pcoa",
               "method" : "POST",
               "description" : "Calculate a PCoA for given input data.",
               "parameters" : {
                  "options" : {},
                  "required" : {},
                  "body" : {
                     "rows" : [
                        "list",
                        [
                           "string",
                           "row id"
                        ]
                     ],
                     "norm" : [
                        "cv",
                        [
                           [
                              "DESeq_blind",
                              "DESeq_blind normalization method"
                           ],
                           [
                              "standardize",
                              "standardize normalization method"
                           ],
                           [
                              "quantile",
                              "quantile normalization method"
                           ],
                           [
                              "DESeq_per_condition",
                              "DESeq_per_condition normalization method"
                           ],
                           [
                              "DESeq_pooled",
                              "DESeq_pooled normalization method"
                           ],
                           [
                              "DESeq_pooled_CR",
                              "DESeq_pooled_CR normalization method"
                           ]
                        ]
                     ],
                     "distance" : [
                        "cv",
                        [
                           [
                              "bray-curtis",
                              "bray-curtis distance method"
                           ],
                           [
                              "euclidean",
                              "euclidean distance method"
                           ],
                           [
                              "maximum",
                              "maximum distance method"
                           ],
                           [
                              "manhattan",
                              "manhattan distance method"
                           ],
                           [
                              "canberra",
                              "canberra distance method"
                           ],
                           [
                              "minkowski",
                              "minkowski distance method"
                           ],
                           [
                              "difference",
                              "difference distance method"
                           ]
                        ]
                     ],
                     "data" : [
                        "list",
                        [
                           "list",
                           [
                              "float",
                              "raw or normalized value"
                           ]
                        ]
                     ],
                     "raw" : [
                        "boolean",
                        "option to use raw data (not normalize)"
                     ],
                     "columns" : [
                        "list",
                        [
                           "string",
                           "column id"
                        ]
                     ]
                  }
               }
            }
         ],
         "description" : "Calculate various statistics for given input data.",
         "url" : "http://kbase.us/services/communities/1/compute",
         "type" : "object",
         "documentation" : "http://kbase.us/services/communities/1/api.html#compute",
         "name" : "compute"
      },
      {
         "type" : "object",
         "description" : "An analysis file from the processing of a metagenome from a specific stage in its analysis",
         "url" : "http://kbase.us/services/communities/1/download",
         "requests" : [
            {
               "attributes" : "self",
               "name" : "info",
               "method" : "GET",
               "parameters" : {
                  "options" : {},
                  "required" : {},
                  "body" : {}
               },
               "type" : "synchronous",
               "description" : "Returns description of parameters and attributes.",
               "request" : "http://kbase.us/services/communities/1/download"
            },
            {
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/download/{ID}",
               "type" : "synchronous",
               "name" : "instance",
               "example" : [
                  "http://kbase.us/services/communities/1/download/mgm4447943.3?file=350.1",
                  "download fasta file of gene-called protein sequences (from stage 350)"
               ],
               "attributes" : {
                  "data" : [
                     "file",
                     "requested analysis file"
                  ]
               },
               "parameters" : {
                  "body" : {},
                  "options" : {
                     "file" : [
                        "string",
                        "file name or identifier"
                     ],
                     "link" : [
                        "boolean",
                        "if true return one time link for download and not file stream"
                     ]
                  },
                  "required" : {
                     "id" : [
                        "string",
                        "unique metagenome identifier"
                     ]
                  }
               },
               "description" : "Returns a single sequence file."
            },
            {
               "parameters" : {
                  "body" : {},
                  "options" : {
                     "stage" : [
                        "string",
                        "stage name or identifier"
                     ]
                  },
                  "required" : {
                     "id" : [
                        "string",
                        "unique metagenome identifier"
                     ]
                  }
               },
               "description" : "Returns a list of sets of sequence files for the given id.",
               "method" : "GET",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/download/{ID}",
               "example" : [
                  "http://kbase.us/services/communities/1/download/mgm4447943.3?stage=650",
                  "view all available files from stage 650"
               ],
               "attributes" : {
                  "url" : [
                     "string",
                     "url for retrieving this analysis file"
                  ],
                  "stage_id" : [
                     "string",
                     "three digit numerical identifier of the stage"
                  ],
                  "id" : [
                     "string",
                     "unique metagenome identifier"
                  ],
                  "file_name" : [
                     "string",
                     "name of the analysis file"
                  ],
                  "stage_name" : [
                     "string",
                     "name of the stage in processing of this file"
                  ],
                  "stage_type" : [
                     "string",
                     "type of the analysis file within a stage, i.e. passed or removed for quality control steps"
                  ],
                  "file_id" : [
                     "string",
                     "unique identifier of file in stage"
                  ]
               },
               "name" : "setlist"
            }
         ],
         "documentation" : "http://kbase.us/services/communities/1/api.html#download",
         "name" : "download"
      },
      {
         "documentation" : "http://kbase.us/services/communities/1/api.html#heartbeat",
         "name" : "heartbeat",
         "requests" : [
            {
               "type" : "synchronous",
               "description" : "Returns description of parameters and attributes.",
               "request" : "http://kbase.us/services/communities/1/heartbeat",
               "method" : "GET",
               "parameters" : {
                  "options" : {},
                  "required" : {},
                  "body" : {}
               },
               "attributes" : "self",
               "name" : "info"
            },
            {
               "description" : "Returns the status of a service.",
               "parameters" : {
                  "required" : {
                     "service" : [
                        "cv",
                        [
                           [
                              "FTP",
                              "file server"
                           ],
                           [
                              "website",
                              "MG-RAST website"
                           ],
                           [
                              "SHOCK",
                              "object storage"
                           ],
                           [
                              "SHOCKDB",
                              "object storage mongodb"
                           ],
                           [
                              "AWE",
                              "worker engine"
                           ],
                           [
                              "AWEDB",
                              "worker engine mongodb"
                           ],
                           [
                              "M5NR",
                              "non-redundant sequence database"
                           ],
                           [
                              "solr",
                              "search engine"
                           ],
                           [
                              "postgres",
                              "analysis database"
                           ],
                           [
                              "mySQL",
                              "job database"
                           ]
                        ]
                     ]
                  },
                  "options" : {},
                  "body" : {}
               },
               "name" : "instance",
               "attributes" : {
                  "service" : [
                     "string",
                     "cv",
                     [
                        [
                           "FTP",
                           "file server"
                        ],
                        [
                           "website",
                           "MG-RAST website"
                        ],
                        [
                           "SHOCK",
                           "object storage"
                        ],
                        [
                           "SHOCKDB",
                           "object storage mongodb"
                        ],
                        [
                           "AWE",
                           "worker engine"
                        ],
                        [
                           "AWEDB",
                           "worker engine mongodb"
                        ],
                        [
                           "M5NR",
                           "non-redundant sequence database"
                        ],
                        [
                           "solr",
                           "search engine"
                        ],
                        [
                           "postgres",
                           "analysis database"
                        ],
                        [
                           "mySQL",
                           "job database"
                        ]
                     ]
                  ],
                  "url" : [
                     "url",
                     "resource location of this resource"
                  ],
                  "status" : [
                     "boolean",
                     "service is up or not"
                  ]
               },
               "example" : [
                  "curl -X GET -H \"auth: auth_key\" \"http://kbase.us/services/communities/1/heartbeat/M5NR\"",
                  "status of the M5NR service"
               ],
               "request" : "http://kbase.us/services/communities/1/heartbeat/{SERVICE}",
               "type" : "synchronous",
               "method" : "GET"
            }
         ],
         "description" : "Status of services",
         "type" : "object",
         "url" : "http://kbase.us/services/communities/1/heartbeat"
      },
      {
         "url" : "http://kbase.us/services/communities/1/inbox",
         "description" : "inbox receives user inbox data upload, requires authentication, see http://blog.metagenomics.anl.gov/mg-rast-v3-2-faq/#api_submission for details",
         "type" : "object",
         "requests" : [
            {
               "parameters" : {
                  "body" : {},
                  "required" : {},
                  "options" : {}
               },
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/inbox",
               "type" : "synchronous",
               "description" : "Returns description of parameters and attributes.",
               "name" : "info",
               "attributes" : "self"
            },
            {
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/inbox",
               "type" : "synchronous",
               "name" : "view",
               "attributes" : {
                  "id" : [
                     "string",
                     "user id"
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "files" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "checksum" : [
                                 "string",
                                 "md5 checksum of file"
                              ],
                              "filename" : [
                                 "string",
                                 "path of file from within user inbox"
                              ],
                              "timestamp" : [
                                 "string",
                                 "timestamp of file"
                              ],
                              "filesize" : [
                                 "string",
                                 "disk size of file in bytes"
                              ]
                           },
                           "list of file objects"
                        ]
                     ]
                  ],
                  "user" : [
                     "string",
                     "user login"
                  ],
                  "timestamp" : [
                     "string",
                     "timestamp for return of this query"
                  ]
               },
               "example" : [
                  "curl -X GET -H \"auth: auth_key\" \"http://kbase.us/services/communities/1/inbox\"",
                  "lists the contents of the user inbox, auth is required"
               ],
               "parameters" : {
                  "body" : {},
                  "options" : {
                     "uuid" : [
                        "string",
                        "RFC 4122 UUID for file"
                     ]
                  },
                  "required" : {
                     "auth" : [
                        "string",
                        "unique string of text generated by MG-RAST for your account"
                     ]
                  }
               },
               "description" : "lists the contents of the user inbox"
            },
            {
               "parameters" : {
                  "required" : {
                     "auth" : [
                        "string",
                        "unique string of text generated by MG-RAST for your account"
                     ]
                  },
                  "options" : {
                     "suspend" : [
                        "boolean",
                        "If true show the given state"
                     ],
                     "queued" : [
                        "boolean",
                        "If true show the given state"
                     ],
                     "deleted" : [
                        "boolean",
                        "If true show the given state"
                     ],
                     "completed" : [
                        "boolean",
                        "If true show the given state"
                     ],
                     "pending" : [
                        "boolean",
                        "If true show the given state"
                     ],
                     "in-progress" : [
                        "boolean",
                        "If true show the given state"
                     ]
                  },
                  "body" : {}
               },
               "description" : "view status of AWE inbox actions",
               "name" : "view_pending",
               "attributes" : {
                  "timestamp" : [
                     "string",
                     "timestamp for return of this query"
                  ],
                  "user" : [
                     "string",
                     "user login"
                  ],
                  "status" : [
                     "string",
                     "status message"
                  ],
                  "id" : [
                     "string",
                     "user id"
                  ]
               },
               "example" : [
                  "curl -X GET -H \"auth: auth_key\" \"http://kbase.us/services/communities/1/inbox/pending?queued&completed\"",
                  "rename file 'sequences.fastq' in user inbox, auth is required"
               ],
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/inbox/pending",
               "type" : "synchronous"
            },
            {
               "method" : "POST",
               "request" : "http://kbase.us/services/communities/1/inbox",
               "type" : "synchronous",
               "name" : "upload",
               "example" : [
                  "curl -X POST -H \"auth: auth_key\" -F \"upload=@sequences.fastq\" \"http://kbase.us/services/communities/1/inbox\"",
                  "upload file 'sequences.fastq' to user inbox, auth is required"
               ],
               "attributes" : {
                  "timestamp" : [
                     "string",
                     "timestamp for return of this query"
                  ],
                  "user" : [
                     "string",
                     "user login"
                  ],
                  "status" : [
                     "string",
                     "status message"
                  ],
                  "id" : [
                     "string",
                     "user id"
                  ]
               },
               "parameters" : {
                  "options" : {},
                  "required" : {
                     "auth" : [
                        "string",
                        "unique string of text generated by MG-RAST for your account"
                     ]
                  },
                  "body" : {
                     "upload" : [
                        "file",
                        "file to upload to inbox"
                     ]
                  }
               },
               "description" : "receives user inbox data upload"
            },
            {
               "attributes" : {
                  "id" : [
                     "string",
                     "user id"
                  ],
                  "status" : [
                     "string",
                     "status message"
                  ],
                  "user" : [
                     "string",
                     "user login"
                  ],
                  "timestamp" : [
                     "string",
                     "timestamp for return of this query"
                  ]
               },
               "example" : [
                  "curl -X DELETE -H \"auth: auth_key\" \"http://kbase.us/services/communities/1/inbox/cfb3d9e1-c9ba-4260-95bf-e410c57b1e49\"",
                  "delete file 'sequences.fastq' from user inbox, auth is required"
               ],
               "name" : "delete",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/inbox/{UUID}",
               "method" : "DELETE",
               "description" : "delete indicated file from inbox",
               "parameters" : {
                  "options" : {},
                  "required" : {
                     "uuid" : [
                        "string",
                        "RFC 4122 UUID for file"
                     ],
                     "auth" : [
                        "string",
                        "unique string of text generated by MG-RAST for your account"
                     ]
                  },
                  "body" : {}
               }
            },
            {
               "parameters" : {
                  "body" : {},
                  "required" : {
                     "auth" : [
                        "string",
                        "unique string of text generated by MG-RAST for your account"
                     ],
                     "uuid" : [
                        "string",
                        "RFC 4122 UUID for file"
                     ]
                  },
                  "options" : {}
               },
               "description" : "get basic file info - returns results and updates shock node",
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/inbox/info/{UUID}",
               "type" : "synchronous",
               "name" : "file_info",
               "attributes" : {
                  "timestamp" : [
                     "string",
                     "timestamp for return of this query"
                  ],
                  "user" : [
                     "string",
                     "user login"
                  ],
                  "stats_info" : [
                     "hash",
                     "key value pairs describing file info"
                  ],
                  "status" : [
                     "string",
                     "status message"
                  ],
                  "id" : [
                     "string",
                     "user id"
                  ]
               },
               "example" : [
                  "curl -X GET -H \"auth: auth_key\" \"http://kbase.us/services/communities/1/inbox/info/cfb3d9e1-c9ba-4260-95bf-e410c57b1e49\"",
                  "get basic info for file with given id in user inbox, auth is required"
               ]
            },
            {
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/inbox/validate/{UUID}",
               "type" : "synchronous",
               "name" : "validate_metadata",
               "example" : [
                  "curl -X GET -H \"auth: auth_key\" \"http://kbase.us/services/communities/1/inbox/validate/cfb3d9e1-c9ba-4260-95bf-e410c57b1e49\"",
                  "validate metadata file with given id in user inbox, auth is required"
               ],
               "attributes" : {
                  "status" : [
                     "string",
                     "status message"
                  ],
                  "id" : [
                     "string",
                     "user id"
                  ],
                  "timestamp" : [
                     "string",
                     "timestamp for return of this query"
                  ],
                  "user" : [
                     "string",
                     "user login"
                  ]
               },
               "parameters" : {
                  "body" : {},
                  "options" : {},
                  "required" : {
                     "uuid" : [
                        "string",
                        "RFC 4122 UUID for file"
                     ],
                     "auth" : [
                        "string",
                        "unique string of text generated by MG-RAST for your account"
                     ]
                  }
               },
               "description" : "validate metadata spreadsheet in inbox"
            },
            {
               "parameters" : {
                  "options" : {},
                  "required" : {
                     "auth" : [
                        "string",
                        "unique string of text generated by MG-RAST for your account"
                     ],
                     "uuid" : [
                        "string",
                        "RFC 4122 UUID for sequence file"
                     ]
                  },
                  "body" : {}
               },
               "description" : "runs sequence stats on file in user inbox - submits AWE job",
               "method" : "GET",
               "type" : "asynchronous",
               "request" : "http://kbase.us/services/communities/1/inbox/stats/{UUID}",
               "example" : [
                  "curl -X GET -H \"auth: auth_key\" \"http://kbase.us/services/communities/1/inbox/stats/cfb3d9e1-c9ba-4260-95bf-e410c57b1e49\"",
                  "runs seq stats on file with given id in user inbox, auth is required"
               ],
               "attributes" : {
                  "user" : [
                     "string",
                     "user login"
                  ],
                  "timestamp" : [
                     "string",
                     "timestamp for return of this query"
                  ],
                  "id" : [
                     "string",
                     "user id"
                  ],
                  "status" : [
                     "string",
                     "status message"
                  ],
                  "awe_id" : [
                     "string",
                     "url/id of awe job"
                  ]
               },
               "name" : "seq_stats"
            },
            {
               "parameters" : {
                  "options" : {},
                  "required" : {
                     "auth" : [
                        "string",
                        "unique string of text generated by MG-RAST for your account"
                     ],
                     "uuid" : [
                        "string",
                        "RFC 4122 UUID for file"
                     ]
                  },
                  "body" : {
                     "name" : [
                        "string",
                        "new name for file"
                     ],
                     "file" : [
                        "string",
                        "RFC 4122 UUID for file"
                     ]
                  }
               },
               "description" : "rename indicated file from inbox",
               "example" : [
                  "curl -X POST -H \"auth: auth_key\" \"http://kbase.us/services/communities/1/inbox/rename\"",
                  "rename file in user inbox, auth is required"
               ],
               "attributes" : {
                  "user" : [
                     "string",
                     "user login"
                  ],
                  "timestamp" : [
                     "string",
                     "timestamp for return of this query"
                  ],
                  "id" : [
                     "string",
                     "user id"
                  ],
                  "status" : [
                     "string",
                     "status message"
                  ]
               },
               "name" : "rename",
               "method" : "POST",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/inbox/rename"
            },
            {
               "parameters" : {
                  "body" : {
                     "sff_file" : [
                        "string",
                        "RFC 4122 UUID for sff file"
                     ]
                  },
                  "options" : {},
                  "required" : {
                     "auth" : [
                        "string",
                        "unique string of text generated by MG-RAST for your account"
                     ]
                  }
               },
               "description" : "create fastq file from sff file - submits AWE job",
               "method" : "POST",
               "type" : "asynchronous",
               "request" : "http://kbase.us/services/communities/1/inbox/sff2fastq",
               "example" : [
                  "curl -X POST -H \"auth: auth_key\" -F \"sff_file=cfb3d9e1-c9ba-4260-95bf-e410c57b1e49\" \"http://kbase.us/services/communities/1/inbox/sff2fastq\"",
                  "create fastq file from sff file with given id in user inbox, auth is required"
               ],
               "attributes" : {
                  "timestamp" : [
                     "string",
                     "timestamp for return of this query"
                  ],
                  "user" : [
                     "string",
                     "user login"
                  ],
                  "status" : [
                     "string",
                     "status message"
                  ],
                  "awe_id" : [
                     "string",
                     "url/id of awe job"
                  ],
                  "id" : [
                     "string",
                     "user id"
                  ]
               },
               "name" : "sff_to_fastq"
            },
            {
               "parameters" : {
                  "body" : {
                     "seq_file" : [
                        "string",
                        "RFC 4122 UUID for sequence file"
                     ],
                     "index_file" : [
                        "string",
                        "RFC 4122 UUID for index file (optional)"
                     ],
                     "rc_index" : [
                        "boolean",
                        "If true barcodes in index file are reverse compliment of mapping file, default is false"
                     ],
                     "barcode_file" : [
                        "string",
                        "RFC 4122 UUID for barcode mapping file"
                     ]
                  },
                  "options" : {},
                  "required" : {
                     "auth" : [
                        "string",
                        "unique string of text generated by MG-RAST for your account"
                     ]
                  }
               },
               "description" : "demultiplex seq file with barcode file - submits AWE job",
               "method" : "POST",
               "type" : "asynchronous",
               "request" : "http://kbase.us/services/communities/1/inbox/demultiplex",
               "attributes" : {
                  "timestamp" : [
                     "string",
                     "timestamp for return of this query"
                  ],
                  "user" : [
                     "string",
                     "user login"
                  ],
                  "awe_id" : [
                     "string",
                     "url/id of awe job"
                  ],
                  "status" : [
                     "string",
                     "status message"
                  ],
                  "id" : [
                     "string",
                     "user id"
                  ]
               },
               "example" : [
                  "curl -X POST -H \"auth: auth_key\" -F \"seq_file=cfb3d9e1-c9ba-4260-95bf-e410c57b1e49\" -F \"barcode_file=cfb3d9e1-c9ba-4260-95bf-e410c57b1e49\" \"http://kbase.us/services/communities/1/inbox/demultiplex\"",
                  "demultiplex seq file with barcode file for given ids in user inbox, auth is required"
               ],
               "name" : "demultiplex"
            },
            {
               "parameters" : {
                  "required" : {
                     "auth" : [
                        "string",
                        "unique string of text generated by MG-RAST for your account"
                     ]
                  },
                  "options" : {},
                  "body" : {
                     "pair_file_2" : [
                        "string",
                        "RFC 4122 UUID for pair 2 file"
                     ],
                     "retain" : [
                        "boolean",
                        "If true retain non-overlapping sequences, default is false"
                     ],
                     "output" : [
                        "string",
                        "prefix for output file, default is a random uuid"
                     ],
                     "pair_file_1" : [
                        "string",
                        "RFC 4122 UUID for pair 1 file"
                     ]
                  }
               },
               "description" : "merge overlapping paired-end fastq files - submits AWE job",
               "method" : "POST",
               "type" : "asynchronous",
               "request" : "http://kbase.us/services/communities/1/inbox/pairjoin",
               "example" : [
                  "curl -X POST -H \"auth: auth_key\" -F \"retain=1\" -F \"pair_file_1=cfb3d9e1-c9ba-4260-95bf-e410c57b1e49\" -F \"pair_file_2=cfb3d9e1-c9ba-4260-95bf-e410c57b1e49\" \"http://kbase.us/services/communities/1/inbox/pairjoin\"",
                  "merge overlapping paired-end fastq files for given ids, retain non-overlapping pairs"
               ],
               "attributes" : {
                  "timestamp" : [
                     "string",
                     "timestamp for return of this query"
                  ],
                  "user" : [
                     "string",
                     "user login"
                  ],
                  "awe_id" : [
                     "string",
                     "url/id of awe job"
                  ],
                  "status" : [
                     "string",
                     "status message"
                  ],
                  "id" : [
                     "string",
                     "user id"
                  ]
               },
               "name" : "pair_join"
            },
            {
               "description" : "merge overlapping paired-end fastq files and demultiplex based on index file - submits AWE job",
               "parameters" : {
                  "options" : {},
                  "required" : {
                     "auth" : [
                        "string",
                        "unique string of text generated by MG-RAST for your account"
                     ]
                  },
                  "body" : {
                     "retain" : [
                        "boolean",
                        "If true retain non-overlapping sequences, default is false"
                     ],
                     "index_file" : [
                        "string",
                        "RFC 4122 UUID for index file"
                     ],
                     "pair_file_1" : [
                        "string",
                        "RFC 4122 UUID for pair 1 file"
                     ],
                     "rc_index" : [
                        "boolean",
                        "If true barcodes in index file are reverse compliment of mapping file, default is false"
                     ],
                     "barcode_file" : [
                        "string",
                        "RFC 4122 UUID for barcode mapping file"
                     ],
                     "pair_file_2" : [
                        "string",
                        "RFC 4122 UUID for pair 2 file"
                     ]
                  }
               },
               "attributes" : {
                  "user" : [
                     "string",
                     "user login"
                  ],
                  "timestamp" : [
                     "string",
                     "timestamp for return of this query"
                  ],
                  "id" : [
                     "string",
                     "user id"
                  ],
                  "status" : [
                     "string",
                     "status message"
                  ],
                  "awe_id" : [
                     "string",
                     "url/id of awe job"
                  ]
               },
               "example" : [
                  "curl -X POST -H \"auth: auth_key\" -F \"pair_file_1=cfb3d9e1-c9ba-4260-95bf-e410c57b1e49\" -F \"pair_file_2=cfb3d9e1-c9ba-4260-95bf-e410c57b1e49\" -F \"index_file=cfb3d9e1-c9ba-4260-95bf-e410c57b1e49\" \"http://kbase.us/services/communities/1/inbox/pairjoin_demultiplex\"",
                  "merge overlapping paired-end fastq files then demultiplex with index file, for given ids"
               ],
               "name" : "pair_join_demultiplex",
               "type" : "asynchronous",
               "request" : "http://kbase.us/services/communities/1/inbox/pairjoin_demultiplex",
               "method" : "POST"
            }
         ],
         "documentation" : "http://kbase.us/services/communities/1/api.html#inbox",
         "name" : "inbox"
      },
      {
         "name" : "library",
         "documentation" : "http://kbase.us/services/communities/1/api.html#library",
         "url" : "http://kbase.us/services/communities/1/library",
         "description" : "A library of metagenomic samples from some environment",
         "type" : "object",
         "requests" : [
            {
               "parameters" : {
                  "body" : {},
                  "required" : {},
                  "options" : {}
               },
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/library",
               "type" : "synchronous",
               "description" : "Returns description of parameters and attributes.",
               "name" : "info",
               "attributes" : "self"
            },
            {
               "name" : "query",
               "example" : [
                  "http://kbase.us/services/communities/1/library?limit=20&order=name",
                  "retrieve the first 20 libraries ordered by name"
               ],
               "attributes" : {
                  "data" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "url" : [
                                 "uri",
                                 "resource location of this object instance"
                              ],
                              "metagenome" : [
                                 "reference metagenome",
                                 "reference to the related metagenome object"
                              ],
                              "created" : [
                                 "date",
                                 "time the object was first created"
                              ],
                              "metadata" : [
                                 "hash",
                                 "key value pairs describing metadata"
                              ],
                              "project" : [
                                 "reference project",
                                 "reference to the project object"
                              ],
                              "name" : [
                                 "string",
                                 "human readable identifier"
                              ],
                              "id" : [
                                 "string",
                                 "unique object identifier"
                              ],
                              "version" : [
                                 "integer",
                                 "version of the object"
                              ],
                              "sequencesets" : [
                                 "list",
                                 [
                                    "reference sequenceset",
                                    "a list of references to the related sequence sets"
                                 ]
                              ],
                              "sample" : [
                                 "reference sample",
                                 "reference to the related sample object"
                              ]
                           },
                           "list of the library objects"
                        ]
                     ]
                  ],
                  "limit" : [
                     "integer",
                     "maximum number of data items returned, default is 10"
                  ],
                  "next" : [
                     "uri",
                     "link to the previous set or null if this is the first set"
                  ],
                  "total_count" : [
                     "integer",
                     "total number of available data items"
                  ],
                  "order" : [
                     "string",
                     "name of the attribute the returned data is ordered by"
                  ],
                  "prev" : [
                     "uri",
                     "link to the next set or null if this is the last set"
                  ],
                  "offset" : [
                     "integer",
                     "zero based index of the first returned data item"
                  ]
               },
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/library",
               "type" : "synchronous",
               "parameters" : {
                  "body" : {},
                  "required" : {},
                  "options" : {
                     "order" : [
                        "cv",
                        [
                           [
                              "id",
                              "return data objects ordered by id"
                           ],
                           [
                              "name",
                              "return data objects ordered by name"
                           ]
                        ]
                     ],
                     "offset" : [
                        "integer",
                        "zero based index of the first data object to be returned"
                     ],
                     "verbosity" : [
                        "cv",
                        [
                           [
                              "minimal",
                              "returns only minimal information"
                           ]
                        ]
                     ],
                     "limit" : [
                        "integer",
                        "maximum number of items requested"
                     ]
                  }
               },
               "description" : "Returns a set of data matching the query criteria."
            },
            {
               "name" : "instance",
               "attributes" : {
                  "sample" : [
                     "reference sample",
                     "reference to the related sample object"
                  ],
                  "sequencesets" : [
                     "list",
                     [
                        "reference sequenceset",
                        "a list of references to the related sequence sets"
                     ]
                  ],
                  "version" : [
                     "integer",
                     "version of the object"
                  ],
                  "id" : [
                     "string",
                     "unique object identifier"
                  ],
                  "metadata" : [
                     "hash",
                     "key value pairs describing metadata"
                  ],
                  "name" : [
                     "string",
                     "human readable identifier"
                  ],
                  "project" : [
                     "reference project",
                     "reference to the project object"
                  ],
                  "created" : [
                     "date",
                     "time the object was first created"
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "metagenome" : [
                     "reference metagenome",
                     "reference to the related metagenome object"
                  ]
               },
               "example" : [
                  "http://kbase.us/services/communities/1/library/mgl52924?verbosity=full",
                  "retrieve all data for library mgl52924"
               ],
               "request" : "http://kbase.us/services/communities/1/library/{ID}",
               "type" : "synchronous",
               "method" : "GET",
               "description" : "Returns a single data object.",
               "parameters" : {
                  "body" : {},
                  "required" : {
                     "id" : [
                        "string",
                        "unique object identifier"
                     ]
                  },
                  "options" : {
                     "verbosity" : [
                        "cv",
                        [
                           [
                              "minimal",
                              "returns only minimal information"
                           ],
                           [
                              "verbose",
                              "returns a standard subselection of metadata"
                           ],
                           [
                              "full",
                              "returns all connected metadata"
                           ]
                        ]
                     ]
                  }
               }
            }
         ]
      },
      {
         "url" : "http://kbase.us/services/communities/1/m5nr",
         "description" : "M5NR provides data through a comprehensive non-redundant protein / rRNA database",
         "type" : "object",
         "requests" : [
            {
               "attributes" : "self",
               "name" : "info",
               "type" : "synchronous",
               "description" : "Returns description of parameters and attributes.",
               "request" : "http://kbase.us/services/communities/1/m5nr",
               "method" : "GET",
               "parameters" : {
                  "body" : {},
                  "required" : {},
                  "options" : {}
               }
            },
            {
               "request" : "http://kbase.us/services/communities/1/m5nr/ontology",
               "type" : "synchronous",
               "method" : "GET",
               "name" : "ontology",
               "attributes" : {
                  "data" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "level2" : [
                                 "string",
                                 "ontology level 2"
                              ],
                              "level1" : [
                                 "string",
                                 "ontology top level"
                              ],
                              "level4" : [
                                 "string",
                                 "ontology bottom level"
                              ],
                              "id" : [
                                 "string",
                                 "ontology ID"
                              ],
                              "level3" : [
                                 "string",
                                 "ontology level 3"
                              ],
                              "source" : [
                                 "string",
                                 "source name"
                              ]
                           },
                           "ontology object"
                        ]
                     ]
                  ],
                  "version" : [
                     "integer",
                     "version of M5NR"
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ]
               },
               "example" : [
                  "http://kbase.us/services/communities/1/m5nr/ontology?source=Subsystems&min_level=level3",
                  "retrieve subsystems hierarchy for the top 3 levels"
               ],
               "description" : "Return functional hierarchy",
               "parameters" : {
                  "options" : {
                     "source" : [
                        "cv",
                        [
                           [
                              "Subsystems",
                              "ontology database, type ontology only"
                           ],
                           [
                              "NOG",
                              "ontology database, type ontology only"
                           ],
                           [
                              "COG",
                              "ontology database, type ontology only"
                           ],
                           [
                              "KO",
                              "ontology database, type ontology only"
                           ]
                        ]
                     ],
                     "version" : [
                        "integer",
                        "M5NR version, default 10"
                     ],
                     "filter_level" : [
                        "cv",
                        [
                           [
                              "function",
                              "bottom function ontology level"
                           ],
                           [
                              "level3",
                              "function ontology level"
                           ],
                           [
                              "level2",
                              "function ontology level"
                           ],
                           [
                              "level1",
                              "top function ontology level"
                           ]
                        ]
                     ],
                     "exact" : [
                        "boolean",
                        "if true return only those ontologies that exactly match filter, default is false"
                     ],
                     "min_level" : [
                        "cv",
                        [
                           [
                              "function",
                              "bottom function ontology level"
                           ],
                           [
                              "level3",
                              "function ontology level"
                           ],
                           [
                              "level2",
                              "function ontology level"
                           ],
                           [
                              "level1",
                              "top function ontology level"
                           ]
                        ]
                     ],
                     "filter" : [
                        "string",
                        "text of ontology group (filter_level) to filter by"
                     ]
                  },
                  "required" : {},
                  "body" : {}
               }
            },
            {
               "description" : "Return organism hierarchy",
               "parameters" : {
                  "required" : {},
                  "options" : {
                     "filter_level" : [
                        "cv",
                        [
                           [
                              "species",
                              "organism type level"
                           ],
                           [
                              "genus",
                              "organism taxonomic level"
                           ],
                           [
                              "family",
                              "organism taxonomic level"
                           ],
                           [
                              "order",
                              "organism taxonomic level"
                           ],
                           [
                              "class",
                              "organism taxonomic level"
                           ],
                           [
                              "phylum",
                              "organism taxonomic level"
                           ],
                           [
                              "domain",
                              "top organism taxonomic level"
                           ]
                        ]
                     ],
                     "version" : [
                        "integer",
                        "M5NR version, default 10"
                     ],
                     "exact" : [
                        "boolean",
                        "if true return only those taxonomies that exactly match filter, default is false"
                     ],
                     "filter" : [
                        "string",
                        "text of taxonomy group (filter_level) to filter by"
                     ],
                     "min_level" : [
                        "cv",
                        [
                           [
                              "species",
                              "organism type level"
                           ],
                           [
                              "genus",
                              "organism taxonomic level"
                           ],
                           [
                              "family",
                              "organism taxonomic level"
                           ],
                           [
                              "order",
                              "organism taxonomic level"
                           ],
                           [
                              "class",
                              "organism taxonomic level"
                           ],
                           [
                              "phylum",
                              "organism taxonomic level"
                           ],
                           [
                              "domain",
                              "top organism taxonomic level"
                           ]
                        ]
                     ]
                  },
                  "body" : {}
               },
               "attributes" : {
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "data" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "family" : [
                                 "string",
                                 "organism family"
                              ],
                              "class" : [
                                 "string",
                                 "organism class"
                              ],
                              "domain" : [
                                 "string",
                                 "organism domain"
                              ],
                              "order" : [
                                 "string",
                                 "organism order"
                              ],
                              "ncbi_tax_id" : [
                                 "int",
                                 "organism ncbi id"
                              ],
                              "species" : [
                                 "string",
                                 "organism species"
                              ],
                              "organism" : [
                                 "string",
                                 "organism name"
                              ],
                              "genus" : [
                                 "string",
                                 "organism genus"
                              ],
                              "phylum" : [
                                 "string",
                                 "organism phylum"
                              ]
                           },
                           "taxonomy object"
                        ]
                     ]
                  ],
                  "version" : [
                     "integer",
                     "version of M5NR"
                  ]
               },
               "example" : [
                  "http://kbase.us/services/communities/1/m5nr/taxonomy?filter=Bacteroidetes&filter_level=phylum&min_level=genus",
                  "retrieve all class level taxa that belong to Bacteroidetes"
               ],
               "name" : "taxonomy",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/m5nr/taxonomy",
               "method" : "GET"
            },
            {
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/m5nr/sources",
               "method" : "GET",
               "example" : [
                  "http://kbase.us/services/communities/1/m5nr/sources",
                  "retrieve all data sources for M5NR"
               ],
               "attributes" : {
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "data" : [
                     "list",
                     [
                        "object",
                        "source object"
                     ]
                  ],
                  "version" : [
                     "integer",
                     "version of M5NR"
                  ]
               },
               "name" : "sources",
               "description" : "Return all sources in M5NR",
               "parameters" : {
                  "required" : {},
                  "options" : {
                     "version" : [
                        "integer",
                        "M5NR version, default 10"
                     ]
                  },
                  "body" : {}
               }
            },
            {
               "description" : "Return annotation of given source protein ID",
               "parameters" : {
                  "body" : {},
                  "options" : {
                     "version" : [
                        "integer",
                        "M5NR version, default 10"
                     ],
                     "limit" : [
                        "integer",
                        "maximum number of items requested"
                     ],
                     "offset" : [
                        "integer",
                        "zero based index of the first data object to be returned"
                     ],
                     "order" : [
                        "string",
                        "name of the attribute the returned data is ordered by"
                     ]
                  },
                  "required" : {
                     "id" : [
                        "string",
                        "unique identifier from source DB"
                     ]
                  }
               },
               "attributes" : {
                  "limit" : [
                     "integer",
                     "maximum number of data items returned, default is 10"
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "next" : [
                     "uri",
                     "link to the previous set or null if this is the first set"
                  ],
                  "offset" : [
                     "integer",
                     "zero based index of the first returned data item"
                  ],
                  "prev" : [
                     "uri",
                     "link to the next set or null if this is the last set"
                  ],
                  "version" : [
                     "integer",
                     "version of M5NR"
                  ],
                  "data" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "ncbi_tax_id" : [
                                 "int",
                                 "organism ncbi tax_id"
                              ],
                              "organism" : [
                                 "string",
                                 "organism annotation"
                              ],
                              "source" : [
                                 "string",
                                 "source name"
                              ],
                              "type" : [
                                 "string",
                                 "source type"
                              ],
                              "function" : [
                                 "string",
                                 "function annotation"
                              ],
                              "md5" : [
                                 "string",
                                 "md5 checksum - M5NR ID"
                              ],
                              "accession" : [
                                 "string",
                                 "unique identifier given by source"
                              ],
                              "alias" : [
                                 "list",
                                 [
                                    "string",
                                    "db_xref aliases"
                                 ]
                              ]
                           },
                           "annotation object"
                        ]
                     ]
                  ],
                  "total_count" : [
                     "integer",
                     "total number of available data items"
                  ]
               },
               "example" : [
                  "http://kbase.us/services/communities/1/m5nr/accession/YP_003268079.1",
                  "retrieve M5NR data for accession ID 'YP_003268079.1'"
               ],
               "name" : "accession",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/m5nr/accession/{id}",
               "method" : "GET"
            },
            {
               "request" : "http://kbase.us/services/communities/1/m5nr/alias/{text}",
               "type" : "synchronous",
               "method" : "GET",
               "name" : "alias",
               "attributes" : {
                  "offset" : [
                     "integer",
                     "zero based index of the first returned data item"
                  ],
                  "prev" : [
                     "uri",
                     "link to the next set or null if this is the last set"
                  ],
                  "limit" : [
                     "integer",
                     "maximum number of data items returned, default is 10"
                  ],
                  "next" : [
                     "uri",
                     "link to the previous set or null if this is the first set"
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "total_count" : [
                     "integer",
                     "total number of available data items"
                  ],
                  "data" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "alias" : [
                                 "list",
                                 [
                                    "string",
                                    "db_xref aliases"
                                 ]
                              ],
                              "accession" : [
                                 "string",
                                 "unique identifier given by source"
                              ],
                              "md5" : [
                                 "string",
                                 "md5 checksum - M5NR ID"
                              ],
                              "function" : [
                                 "string",
                                 "function annotation"
                              ],
                              "type" : [
                                 "string",
                                 "source type"
                              ],
                              "source" : [
                                 "string",
                                 "source name"
                              ],
                              "organism" : [
                                 "string",
                                 "organism annotation"
                              ],
                              "ncbi_tax_id" : [
                                 "int",
                                 "organism ncbi tax_id"
                              ]
                           },
                           "annotation object"
                        ]
                     ]
                  ],
                  "version" : [
                     "integer",
                     "version of M5NR"
                  ]
               },
               "example" : [
                  "http://kbase.us/services/communities/1/m5nr/alias/IPR001478",
                  "retrieve M5NR data for db_xref ID 'IPR001478'"
               ],
               "description" : "Return annotations for alias IDs containing the given text",
               "parameters" : {
                  "options" : {
                     "exact" : [
                        "boolean",
                        "if true return only those annotations that exactly match input text, default is false"
                     ],
                     "limit" : [
                        "integer",
                        "maximum number of items requested"
                     ],
                     "version" : [
                        "integer",
                        "M5NR version, default 10"
                     ],
                     "source" : [
                        "string",
                        "source name to restrict search by"
                     ],
                     "offset" : [
                        "integer",
                        "zero based index of the first data object to be returned"
                     ],
                     "order" : [
                        "string",
                        "name of the attribute the returned data is ordered by"
                     ]
                  },
                  "required" : {
                     "text" : [
                        "string",
                        "text string of partial alias"
                     ]
                  },
                  "body" : {}
               }
            },
            {
               "method" : "GET",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/m5nr/md5/{id}",
               "example" : [
                  "http://kbase.us/services/communities/1/m5nr/md5/000821a2e2f63df1a3873e4b280002a8?source=InterPro",
                  "retrieve InterPro M5NR data for md5sum '000821a2e2f63df1a3873e4b280002a8'"
               ],
               "attributes" : {
                  "prev" : [
                     "uri",
                     "link to the next set or null if this is the last set"
                  ],
                  "offset" : [
                     "integer",
                     "zero based index of the first returned data item"
                  ],
                  "next" : [
                     "uri",
                     "link to the previous set or null if this is the first set"
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "limit" : [
                     "integer",
                     "maximum number of data items returned, default is 10"
                  ],
                  "total_count" : [
                     "integer",
                     "total number of available data items"
                  ],
                  "data" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "md5" : [
                                 "string",
                                 "md5 checksum - M5NR ID"
                              ],
                              "function" : [
                                 "string",
                                 "function annotation"
                              ],
                              "alias" : [
                                 "list",
                                 [
                                    "string",
                                    "db_xref aliases"
                                 ]
                              ],
                              "accession" : [
                                 "string",
                                 "unique identifier given by source"
                              ],
                              "ncbi_tax_id" : [
                                 "int",
                                 "organism ncbi tax_id"
                              ],
                              "organism" : [
                                 "string",
                                 "organism annotation"
                              ],
                              "source" : [
                                 "string",
                                 "source name"
                              ],
                              "type" : [
                                 "string",
                                 "source type"
                              ]
                           },
                           "annotation object"
                        ]
                     ]
                  ],
                  "version" : [
                     "integer",
                     "version of M5NR"
                  ]
               },
               "name" : "md5",
               "parameters" : {
                  "body" : {},
                  "required" : {
                     "id" : [
                        "string",
                        "unique identifier in form of md5 checksum"
                     ]
                  },
                  "options" : {
                     "limit" : [
                        "integer",
                        "maximum number of items requested"
                     ],
                     "format" : [
                        "cv",
                        [
                           [
                              "fasta",
                              "return sequences in fasta format"
                           ],
                           [
                              "json",
                              "return sequences in json struct"
                           ]
                        ]
                     ],
                     "version" : [
                        "integer",
                        "M5NR version, default 10"
                     ],
                     "source" : [
                        "string",
                        "source name to restrict search by"
                     ],
                     "sequence" : [
                        "boolean",
                        "if true return sequence output, else return annotation output, default is false"
                     ],
                     "order" : [
                        "string",
                        "name of the attribute the returned data is ordered by"
                     ],
                     "offset" : [
                        "integer",
                        "zero based index of the first data object to be returned"
                     ]
                  }
               },
               "description" : "Return annotation(s) or sequence of given md5sum (M5NR ID)"
            },
            {
               "example" : [
                  "http://kbase.us/services/communities/1/m5nr/function/sulfatase?source=GenBank",
                  "retrieve GenBank M5NR data for function names containing string 'sulfatase'"
               ],
               "attributes" : {
                  "prev" : [
                     "uri",
                     "link to the next set or null if this is the last set"
                  ],
                  "offset" : [
                     "integer",
                     "zero based index of the first returned data item"
                  ],
                  "limit" : [
                     "integer",
                     "maximum number of data items returned, default is 10"
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "next" : [
                     "uri",
                     "link to the previous set or null if this is the first set"
                  ],
                  "total_count" : [
                     "integer",
                     "total number of available data items"
                  ],
                  "version" : [
                     "integer",
                     "version of M5NR"
                  ],
                  "data" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "ncbi_tax_id" : [
                                 "int",
                                 "organism ncbi tax_id"
                              ],
                              "type" : [
                                 "string",
                                 "source type"
                              ],
                              "organism" : [
                                 "string",
                                 "organism annotation"
                              ],
                              "source" : [
                                 "string",
                                 "source name"
                              ],
                              "md5" : [
                                 "string",
                                 "md5 checksum - M5NR ID"
                              ],
                              "function" : [
                                 "string",
                                 "function annotation"
                              ],
                              "accession" : [
                                 "string",
                                 "unique identifier given by source"
                              ],
                              "alias" : [
                                 "list",
                                 [
                                    "string",
                                    "db_xref aliases"
                                 ]
                              ]
                           },
                           "annotation object"
                        ]
                     ]
                  ]
               },
               "name" : "function",
               "method" : "GET",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/m5nr/function/{text}",
               "parameters" : {
                  "body" : {},
                  "options" : {
                     "offset" : [
                        "integer",
                        "zero based index of the first data object to be returned"
                     ],
                     "order" : [
                        "string",
                        "name of the attribute the returned data is ordered by"
                     ],
                     "inverse" : [
                        "boolean",
                        "if true return only those annotations that do not match input text, default is false"
                     ],
                     "version" : [
                        "integer",
                        "M5NR version, default 10"
                     ],
                     "exact" : [
                        "boolean",
                        "if true return only those annotations that exactly match input text, default is false"
                     ],
                     "limit" : [
                        "integer",
                        "maximum number of items requested"
                     ],
                     "source" : [
                        "string",
                        "source name to restrict search by"
                     ]
                  },
                  "required" : {
                     "text" : [
                        "string",
                        "text string of partial function name"
                     ]
                  }
               },
               "description" : "Return annotations for function names containing the given text"
            },
            {
               "name" : "organism",
               "example" : [
                  "http://kbase.us/services/communities/1/m5nr/organism/akkermansia?source=KEGG",
                  "retrieve KEGG M5NR data for organism names containing string 'akkermansia'"
               ],
               "attributes" : {
                  "limit" : [
                     "integer",
                     "maximum number of data items returned, default is 10"
                  ],
                  "next" : [
                     "uri",
                     "link to the previous set or null if this is the first set"
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "prev" : [
                     "uri",
                     "link to the next set or null if this is the last set"
                  ],
                  "offset" : [
                     "integer",
                     "zero based index of the first returned data item"
                  ],
                  "data" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "ncbi_tax_id" : [
                                 "int",
                                 "organism ncbi tax_id"
                              ],
                              "type" : [
                                 "string",
                                 "source type"
                              ],
                              "source" : [
                                 "string",
                                 "source name"
                              ],
                              "organism" : [
                                 "string",
                                 "organism annotation"
                              ],
                              "md5" : [
                                 "string",
                                 "md5 checksum - M5NR ID"
                              ],
                              "function" : [
                                 "string",
                                 "function annotation"
                              ],
                              "alias" : [
                                 "list",
                                 [
                                    "string",
                                    "db_xref aliases"
                                 ]
                              ],
                              "accession" : [
                                 "string",
                                 "unique identifier given by source"
                              ]
                           },
                           "annotation object"
                        ]
                     ]
                  ],
                  "version" : [
                     "integer",
                     "version of M5NR"
                  ],
                  "total_count" : [
                     "integer",
                     "total number of available data items"
                  ]
               },
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/m5nr/organism/{text}",
               "type" : "synchronous",
               "parameters" : {
                  "body" : {},
                  "required" : {
                     "text" : [
                        "string",
                        "text string of partial organism name"
                     ]
                  },
                  "options" : {
                     "inverse" : [
                        "boolean",
                        "if true return only those annotations that do not match input text, default is false"
                     ],
                     "order" : [
                        "string",
                        "name of the attribute the returned data is ordered by"
                     ],
                     "offset" : [
                        "integer",
                        "zero based index of the first data object to be returned"
                     ],
                     "source" : [
                        "string",
                        "source name to restrict search by"
                     ],
                     "tax_level" : [
                        "cv",
                        [
                           [
                              "strain",
                              "bottom organism taxonomic level"
                           ],
                           [
                              "species",
                              "organism type level"
                           ],
                           [
                              "genus",
                              "organism taxonomic level"
                           ],
                           [
                              "family",
                              "organism taxonomic level"
                           ],
                           [
                              "order",
                              "organism taxonomic level"
                           ],
                           [
                              "class",
                              "organism taxonomic level"
                           ],
                           [
                              "phylum",
                              "organism taxonomic level"
                           ],
                           [
                              "domain",
                              "top organism taxonomic level"
                           ]
                        ]
                     ],
                     "limit" : [
                        "integer",
                        "maximum number of items requested"
                     ],
                     "exact" : [
                        "boolean",
                        "if true return only those annotations that exactly match input text, default is false"
                     ],
                     "version" : [
                        "integer",
                        "M5NR version, default 10"
                     ]
                  }
               },
               "description" : "Return annotations for organism names containing the given text"
            },
            {
               "parameters" : {
                  "body" : {},
                  "required" : {
                     "text" : [
                        "string",
                        "text string of protein sequence"
                     ]
                  },
                  "options" : {
                     "order" : [
                        "string",
                        "name of the attribute the returned data is ordered by"
                     ],
                     "offset" : [
                        "integer",
                        "zero based index of the first data object to be returned"
                     ],
                     "version" : [
                        "integer",
                        "M5NR version, default 10"
                     ],
                     "limit" : [
                        "integer",
                        "maximum number of items requested"
                     ],
                     "source" : [
                        "string",
                        "source name to restrict search by"
                     ]
                  }
               },
               "description" : "Return annotation(s) for md5sum (M5NR ID) of given sequence",
               "name" : "sequence",
               "example" : [
                  "http://kbase.us/services/communities/1/m5nr/sequence/MAGENHQWQGSIL?source=TrEMBL",
                  "retrieve TrEMBL M5NR data for md5sum of sequence 'MAGENHQWQGSIL'"
               ],
               "attributes" : {
                  "data" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "md5" : [
                                 "string",
                                 "md5 checksum - M5NR ID"
                              ],
                              "function" : [
                                 "string",
                                 "function annotation"
                              ],
                              "accession" : [
                                 "string",
                                 "unique identifier given by source"
                              ],
                              "alias" : [
                                 "list",
                                 [
                                    "string",
                                    "db_xref aliases"
                                 ]
                              ],
                              "ncbi_tax_id" : [
                                 "int",
                                 "organism ncbi tax_id"
                              ],
                              "type" : [
                                 "string",
                                 "source type"
                              ],
                              "organism" : [
                                 "string",
                                 "organism annotation"
                              ],
                              "source" : [
                                 "string",
                                 "source name"
                              ]
                           },
                           "annotation object"
                        ]
                     ]
                  ],
                  "version" : [
                     "integer",
                     "version of M5NR"
                  ],
                  "total_count" : [
                     "integer",
                     "total number of available data items"
                  ],
                  "limit" : [
                     "integer",
                     "maximum number of data items returned, default is 10"
                  ],
                  "next" : [
                     "uri",
                     "link to the previous set or null if this is the first set"
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "offset" : [
                     "integer",
                     "zero based index of the first returned data item"
                  ],
                  "prev" : [
                     "uri",
                     "link to the next set or null if this is the last set"
                  ]
               },
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/m5nr/sequence/{text}",
               "type" : "synchronous"
            },
            {
               "parameters" : {
                  "required" : {},
                  "options" : {},
                  "body" : {
                     "data" : [
                        "list",
                        [
                           "string",
                           "unique identifier from source DB"
                        ]
                     ],
                     "limit" : [
                        "integer",
                        "maximum number of items requested"
                     ],
                     "version" : [
                        "integer",
                        "M5NR version, default 10"
                     ],
                     "order" : [
                        "string",
                        "name of the attribute the returned data is ordered by"
                     ],
                     "offset" : [
                        "integer",
                        "zero based index of the first data object to be returned"
                     ]
                  }
               },
               "description" : "Return annotations of given source protein IDs",
               "name" : "accession",
               "example" : [
                  "curl -X POST -d '{\"order\":\"function\",\"data\":[\"YP_003268079.1\",\"COG1764\"]}' \"http://kbase.us/services/communities/1/m5nr/accession\"",
                  "retrieve M5NR data for accession IDs 'YP_003268079.1' and 'COG1764' ordered by function"
               ],
               "attributes" : {
                  "version" : [
                     "integer",
                     "version of M5NR"
                  ],
                  "data" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "md5" : [
                                 "string",
                                 "md5 checksum - M5NR ID"
                              ],
                              "function" : [
                                 "string",
                                 "function annotation"
                              ],
                              "alias" : [
                                 "list",
                                 [
                                    "string",
                                    "db_xref aliases"
                                 ]
                              ],
                              "accession" : [
                                 "string",
                                 "unique identifier given by source"
                              ],
                              "ncbi_tax_id" : [
                                 "int",
                                 "organism ncbi tax_id"
                              ],
                              "type" : [
                                 "string",
                                 "source type"
                              ],
                              "organism" : [
                                 "string",
                                 "organism annotation"
                              ],
                              "source" : [
                                 "string",
                                 "source name"
                              ]
                           },
                           "annotation object"
                        ]
                     ]
                  ],
                  "total_count" : [
                     "integer",
                     "total number of available data items"
                  ],
                  "limit" : [
                     "integer",
                     "maximum number of data items returned, default is 10"
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "next" : [
                     "uri",
                     "link to the previous set or null if this is the first set"
                  ],
                  "offset" : [
                     "integer",
                     "zero based index of the first returned data item"
                  ],
                  "prev" : [
                     "uri",
                     "link to the next set or null if this is the last set"
                  ]
               },
               "method" : "POST",
               "request" : "http://kbase.us/services/communities/1/m5nr/accession",
               "type" : "synchronous"
            },
            {
               "example" : [
                  "curl -X POST -d '{\"order\":\"function\",\"data\":[\"IPR001478\",\"TIGR02124\"]}' \"http://kbase.us/services/communities/1/m5nr/alias\"",
                  "retrieve M5NR data for aliases containing string 'IPR001478' and 'TIGR02124'"
               ],
               "attributes" : {
                  "version" : [
                     "integer",
                     "version of M5NR"
                  ],
                  "data" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "ncbi_tax_id" : [
                                 "int",
                                 "organism ncbi tax_id"
                              ],
                              "source" : [
                                 "string",
                                 "source name"
                              ],
                              "organism" : [
                                 "string",
                                 "organism annotation"
                              ],
                              "type" : [
                                 "string",
                                 "source type"
                              ],
                              "function" : [
                                 "string",
                                 "function annotation"
                              ],
                              "md5" : [
                                 "string",
                                 "md5 checksum - M5NR ID"
                              ],
                              "alias" : [
                                 "list",
                                 [
                                    "string",
                                    "db_xref aliases"
                                 ]
                              ],
                              "accession" : [
                                 "string",
                                 "unique identifier given by source"
                              ]
                           },
                           "annotation object"
                        ]
                     ]
                  ],
                  "total_count" : [
                     "integer",
                     "total number of available data items"
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "next" : [
                     "uri",
                     "link to the previous set or null if this is the first set"
                  ],
                  "limit" : [
                     "integer",
                     "maximum number of data items returned, default is 10"
                  ],
                  "offset" : [
                     "integer",
                     "zero based index of the first returned data item"
                  ],
                  "prev" : [
                     "uri",
                     "link to the next set or null if this is the last set"
                  ]
               },
               "name" : "alias",
               "method" : "POST",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/m5nr/alias",
               "parameters" : {
                  "required" : {},
                  "options" : {},
                  "body" : {
                     "offset" : [
                        "integer",
                        "zero based index of the first data object to be returned"
                     ],
                     "order" : [
                        "string",
                        "name of the attribute the returned data is ordered by"
                     ],
                     "source" : [
                        "string",
                        "source name to restrict search by"
                     ],
                     "limit" : [
                        "integer",
                        "maximum number of items requested"
                     ],
                     "data" : [
                        "list",
                        [
                           "string",
                           "text string of partial alias ID"
                        ]
                     ],
                     "exact" : [
                        "boolean",
                        "if true return only those annotations that exactly match input text, default is false"
                     ],
                     "version" : [
                        "integer",
                        "M5NR version, default 10"
                     ]
                  }
               },
               "description" : "Return annotations for aliases containing the given texts"
            },
            {
               "parameters" : {
                  "body" : {
                     "data" : [
                        "list",
                        [
                           "string",
                           "unique identifier in form of md5 checksum"
                        ]
                     ],
                     "limit" : [
                        "integer",
                        "maximum number of items requested"
                     ],
                     "version" : [
                        "integer",
                        "M5NR version, default 10"
                     ],
                     "source" : [
                        "string",
                        "source name to restrict search by"
                     ],
                     "sequence" : [
                        "boolean",
                        "if true return sequence output, else return annotation output, default is false"
                     ],
                     "order" : [
                        "string",
                        "name of the attribute the returned data is ordered by"
                     ],
                     "offset" : [
                        "integer",
                        "zero based index of the first data object to be returned"
                     ]
                  },
                  "options" : {},
                  "required" : {}
               },
               "description" : "Return annotations or sequences of given md5sums (M5NR ID)",
               "name" : "md5",
               "example" : [
                  "curl -X POST -d '{\"source\":\"InterPro\",\"data\":[\"000821a2e2f63df1a3873e4b280002a8\",\"15bf1950bd9867099e72ea6516e3d602\"]}' \"http://kbase.us/services/communities/1/m5nr/md5\"",
                  "retrieve InterPro M5NR data for md5s '000821a2e2f63df1a3873e4b280002a8' and '15bf1950bd9867099e72ea6516e3d602'"
               ],
               "attributes" : {
                  "total_count" : [
                     "integer",
                     "total number of available data items"
                  ],
                  "version" : [
                     "integer",
                     "version of M5NR"
                  ],
                  "data" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "ncbi_tax_id" : [
                                 "int",
                                 "organism ncbi tax_id"
                              ],
                              "type" : [
                                 "string",
                                 "source type"
                              ],
                              "source" : [
                                 "string",
                                 "source name"
                              ],
                              "organism" : [
                                 "string",
                                 "organism annotation"
                              ],
                              "function" : [
                                 "string",
                                 "function annotation"
                              ],
                              "md5" : [
                                 "string",
                                 "md5 checksum - M5NR ID"
                              ],
                              "accession" : [
                                 "string",
                                 "unique identifier given by source"
                              ],
                              "alias" : [
                                 "list",
                                 [
                                    "string",
                                    "db_xref aliases"
                                 ]
                              ]
                           },
                           "annotation object"
                        ]
                     ]
                  ],
                  "offset" : [
                     "integer",
                     "zero based index of the first returned data item"
                  ],
                  "prev" : [
                     "uri",
                     "link to the next set or null if this is the last set"
                  ],
                  "limit" : [
                     "integer",
                     "maximum number of data items returned, default is 10"
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "next" : [
                     "uri",
                     "link to the previous set or null if this is the first set"
                  ]
               },
               "method" : "POST",
               "request" : "http://kbase.us/services/communities/1/m5nr/md5",
               "type" : "synchronous"
            },
            {
               "parameters" : {
                  "body" : {
                     "version" : [
                        "integer",
                        "M5NR version, default 10"
                     ],
                     "data" : [
                        "list",
                        [
                           "string",
                           "text string of partial function name"
                        ]
                     ],
                     "limit" : [
                        "integer",
                        "maximum number of items requested"
                     ],
                     "exact" : [
                        "boolean",
                        "if true return only those annotations that exactly match input text, default is false"
                     ],
                     "source" : [
                        "string",
                        "source name to restrict search by"
                     ],
                     "md5s" : [
                        "list",
                        [
                           "string",
                           "md5 to constrain search by"
                        ]
                     ],
                     "order" : [
                        "string",
                        "name of the attribute the returned data is ordered by"
                     ],
                     "offset" : [
                        "integer",
                        "zero based index of the first data object to be returned"
                     ],
                     "inverse" : [
                        "boolean",
                        "if true return only those annotations that do not match input text, default is false"
                     ]
                  },
                  "required" : {},
                  "options" : {}
               },
               "description" : "Return annotations for function names containing the given texts",
               "example" : [
                  "curl -X POST -d '{\"source\":\"GenBank\",\"limit\":50,\"data\":[\"sulfatase\",\"phosphatase\"]}' \"http://kbase.us/services/communities/1/m5nr/function\"",
                  "retrieve top 50 GenBank M5NR data for function names containing string 'sulfatase' or 'phosphatase'"
               ],
               "attributes" : {
                  "version" : [
                     "integer",
                     "version of M5NR"
                  ],
                  "data" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "accession" : [
                                 "string",
                                 "unique identifier given by source"
                              ],
                              "alias" : [
                                 "list",
                                 [
                                    "string",
                                    "db_xref aliases"
                                 ]
                              ],
                              "md5" : [
                                 "string",
                                 "md5 checksum - M5NR ID"
                              ],
                              "function" : [
                                 "string",
                                 "function annotation"
                              ],
                              "type" : [
                                 "string",
                                 "source type"
                              ],
                              "source" : [
                                 "string",
                                 "source name"
                              ],
                              "organism" : [
                                 "string",
                                 "organism annotation"
                              ],
                              "ncbi_tax_id" : [
                                 "int",
                                 "organism ncbi tax_id"
                              ]
                           },
                           "annotation object"
                        ]
                     ]
                  ],
                  "total_count" : [
                     "integer",
                     "total number of available data items"
                  ],
                  "limit" : [
                     "integer",
                     "maximum number of data items returned, default is 10"
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "next" : [
                     "uri",
                     "link to the previous set or null if this is the first set"
                  ],
                  "offset" : [
                     "integer",
                     "zero based index of the first returned data item"
                  ],
                  "prev" : [
                     "uri",
                     "link to the next set or null if this is the last set"
                  ]
               },
               "name" : "function",
               "method" : "POST",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/m5nr/function"
            },
            {
               "parameters" : {
                  "body" : {
                     "source" : [
                        "string",
                        "source name to restrict search by"
                     ],
                     "exact" : [
                        "boolean",
                        "if true return only those annotations that exactly match input text, default is false"
                     ],
                     "limit" : [
                        "integer",
                        "maximum number of items requested"
                     ],
                     "tax_level" : [
                        "cv",
                        [
                           [
                              "strain",
                              "bottom organism taxonomic level"
                           ],
                           [
                              "species",
                              "organism type level"
                           ],
                           [
                              "genus",
                              "organism taxonomic level"
                           ],
                           [
                              "family",
                              "organism taxonomic level"
                           ],
                           [
                              "order",
                              "organism taxonomic level"
                           ],
                           [
                              "class",
                              "organism taxonomic level"
                           ],
                           [
                              "phylum",
                              "organism taxonomic level"
                           ],
                           [
                              "domain",
                              "top organism taxonomic level"
                           ]
                        ]
                     ],
                     "order" : [
                        "string",
                        "name of the attribute the returned data is ordered by"
                     ],
                     "md5s" : [
                        "list",
                        [
                           "string",
                           "md5 to constrain search by"
                        ]
                     ],
                     "offset" : [
                        "integer",
                        "zero based index of the first data object to be returned"
                     ],
                     "inverse" : [
                        "boolean",
                        "if true return only those annotations that do not match input text, default is false"
                     ],
                     "version" : [
                        "integer",
                        "M5NR version, default 10"
                     ],
                     "data" : [
                        "list",
                        [
                           "string",
                           "text string of partial organism name"
                        ]
                     ]
                  },
                  "required" : {},
                  "options" : {}
               },
               "description" : "Return annotations for organism names containing the given texts",
               "example" : [
                  "curl -X POST -d '{\"source\":\"KEGG\",\"order\":\"accession\",\"data\":[\"akkermansia\",\"yersinia\"]}' \"http://kbase.us/services/communities/1/m5nr/organism\"",
                  "retrieve KEGG M5NR data (ordered by accession ID) for organism names containing string 'akkermansia' or 'yersinia'"
               ],
               "attributes" : {
                  "data" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "ncbi_tax_id" : [
                                 "int",
                                 "organism ncbi tax_id"
                              ],
                              "source" : [
                                 "string",
                                 "source name"
                              ],
                              "organism" : [
                                 "string",
                                 "organism annotation"
                              ],
                              "type" : [
                                 "string",
                                 "source type"
                              ],
                              "function" : [
                                 "string",
                                 "function annotation"
                              ],
                              "md5" : [
                                 "string",
                                 "md5 checksum - M5NR ID"
                              ],
                              "alias" : [
                                 "list",
                                 [
                                    "string",
                                    "db_xref aliases"
                                 ]
                              ],
                              "accession" : [
                                 "string",
                                 "unique identifier given by source"
                              ]
                           },
                           "annotation object"
                        ]
                     ]
                  ],
                  "version" : [
                     "integer",
                     "version of M5NR"
                  ],
                  "total_count" : [
                     "integer",
                     "total number of available data items"
                  ],
                  "next" : [
                     "uri",
                     "link to the previous set or null if this is the first set"
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "limit" : [
                     "integer",
                     "maximum number of data items returned, default is 10"
                  ],
                  "prev" : [
                     "uri",
                     "link to the next set or null if this is the last set"
                  ],
                  "offset" : [
                     "integer",
                     "zero based index of the first returned data item"
                  ]
               },
               "name" : "organism",
               "method" : "POST",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/m5nr/organism"
            },
            {
               "name" : "sequence",
               "attributes" : {
                  "offset" : [
                     "integer",
                     "zero based index of the first returned data item"
                  ],
                  "prev" : [
                     "uri",
                     "link to the next set or null if this is the last set"
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "next" : [
                     "uri",
                     "link to the previous set or null if this is the first set"
                  ],
                  "limit" : [
                     "integer",
                     "maximum number of data items returned, default is 10"
                  ],
                  "total_count" : [
                     "integer",
                     "total number of available data items"
                  ],
                  "version" : [
                     "integer",
                     "version of M5NR"
                  ],
                  "data" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "ncbi_tax_id" : [
                                 "int",
                                 "organism ncbi tax_id"
                              ],
                              "type" : [
                                 "string",
                                 "source type"
                              ],
                              "organism" : [
                                 "string",
                                 "organism annotation"
                              ],
                              "source" : [
                                 "string",
                                 "source name"
                              ],
                              "md5" : [
                                 "string",
                                 "md5 checksum - M5NR ID"
                              ],
                              "function" : [
                                 "string",
                                 "function annotation"
                              ],
                              "accession" : [
                                 "string",
                                 "unique identifier given by source"
                              ],
                              "alias" : [
                                 "list",
                                 [
                                    "string",
                                    "db_xref aliases"
                                 ]
                              ]
                           },
                           "annotation object"
                        ]
                     ]
                  ]
               },
               "example" : [
                  "curl -X POST -d '{\"source\":\"KEGG\",\"order\":\"source\",\"data\":[\"MAGENHQWQGSIL\",\"MAGENHQWQGSIL\"]}' \"http://kbase.us/services/communities/1/m5nr/sequence\"",
                  "retrieve M5NR data ordered by source for sequences 'MAGENHQWQGSIL' and 'MAGENHQWQGSIL'"
               ],
               "method" : "POST",
               "request" : "http://kbase.us/services/communities/1/m5nr/sequence",
               "type" : "synchronous",
               "parameters" : {
                  "options" : {},
                  "required" : {},
                  "body" : {
                     "offset" : [
                        "integer",
                        "zero based index of the first data object to be returned"
                     ],
                     "order" : [
                        "string",
                        "name of the attribute the returned data is ordered by"
                     ],
                     "source" : [
                        "string",
                        "source name to restrict search by"
                     ],
                     "data" : [
                        "list",
                        [
                           "string",
                           "text string of protein sequence"
                        ]
                     ],
                     "limit" : [
                        "integer",
                        "maximum number of items requested"
                     ],
                     "version" : [
                        "integer",
                        "M5NR version, default 10"
                     ]
                  }
               },
               "description" : "Return annotations for md5s (M5NR ID) of given sequences"
            }
         ],
         "documentation" : "http://kbase.us/services/communities/1/api.html#m5nr",
         "name" : "m5nr"
      },
      {
         "requests" : [
            {
               "request" : "http://kbase.us/services/communities/1/matrix",
               "description" : "Returns description of parameters and attributes.",
               "type" : "synchronous",
               "parameters" : {
                  "body" : {},
                  "required" : {},
                  "options" : {}
               },
               "method" : "GET",
               "name" : "info",
               "attributes" : "self"
            },
            {
               "request" : "http://kbase.us/services/communities/1/matrix/organism",
               "type" : "synchronous or asynchronous",
               "method" : "GET",
               "name" : "organism",
               "attributes" : {
                  "data" : [
                     "list",
                     [
                        "list",
                        [
                           "float",
                           "the matrix values"
                        ]
                     ]
                  ],
                  "id" : [
                     "string",
                     "unique object identifier"
                  ],
                  "matrix_type" : [
                     "string",
                     "type of the data encoding matrix (dense or sparse)"
                  ],
                  "date" : [
                     "date",
                     "time the output data was generated"
                  ],
                  "matrix_element_value" : [
                     "string",
                     "result_type of the elements in the return matrix"
                  ],
                  "generated_by" : [
                     "string",
                     "identifier of the data generator"
                  ],
                  "format" : [
                     "string",
                     "format specification name"
                  ],
                  "format_url" : [
                     "string",
                     "url to the format specification"
                  ],
                  "type" : [
                     "string",
                     "type of the data in the return table (taxon, function or gene)"
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "rows" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "id" : [
                                 "string",
                                 "unique annotation text"
                              ],
                              "metadata" : [
                                 "hash",
                                 "key value pairs describing metadata"
                              ]
                           },
                           "rows object"
                        ]
                     ]
                  ],
                  "shape" : [
                     "list",
                     [
                        "integer",
                        "list of the dimension sizes of the return matrix"
                     ]
                  ],
                  "columns" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "id" : [
                                 "string",
                                 "unique metagenome identifier"
                              ],
                              "metadata" : [
                                 "hash",
                                 "key value pairs describing metadata"
                              ]
                           },
                           "columns object"
                        ]
                     ]
                  ],
                  "matrix_element_type" : [
                     "string",
                     "data type of the elements in the return matrix"
                  ]
               },
               "example" : [
                  "http://kbase.us/services/communities/1/matrix/organism?id=mgm4447943.3&id=mgm4447192.3&id=mgm4447102.3&id=mgm4447103.3&group_level=family&source=RefSeq&result_type=abundance&evalue=15",
                  "retrieve abundance matrix of RefSeq organism annotations at family taxa for listed metagenomes at evalue < e-15"
               ],
               "description" : "Returns a BIOM object.",
               "parameters" : {
                  "body" : {},
                  "required" : {},
                  "options" : {
                     "identity" : [
                        "int",
                        "percent value for minimum % identity cutoff: default is 60"
                     ],
                     "source" : [
                        "cv",
                        [
                           [
                              "M5NR",
                              "comprehensive protein database"
                           ],
                           [
                              "M5RNA",
                              "comprehensive RNA database"
                           ],
                           [
                              "RefSeq",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "GenBank",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "IMG",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "SEED",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "TrEMBL",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "SwissProt",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "PATRIC",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "KEGG",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "RDP",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "Greengenes",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "LSU",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "SSU",
                              "RNA database, type organism, function, feature"
                           ]
                        ]
                     ],
                     "length" : [
                        "int",
                        "value for minimum alignment length cutoff: default is 15"
                     ],
                     "evalue" : [
                        "int",
                        "negative exponent value for maximum e-value cutoff: default is 5"
                     ],
                     "filter_source" : [
                        "cv",
                        [
                           [
                              "Subsystems",
                              "ontology database, type ontology only"
                           ],
                           [
                              "NOG",
                              "ontology database, type ontology only"
                           ],
                           [
                              "COG",
                              "ontology database, type ontology only"
                           ],
                           [
                              "KO",
                              "ontology database, type ontology only"
                           ]
                        ]
                     ],
                     "hit_type" : [
                        "cv",
                        [
                           [
                              "all",
                              "returns results based on all organisms that map to top hit per read-feature"
                           ],
                           [
                              "single",
                              "returns results based on a single organism for top hit per read-feature"
                           ],
                           [
                              "lca",
                              "returns results based on the Least Common Ancestor for all organisms (M5NR+M5RNA only) that map to hits from a read-feature"
                           ]
                        ]
                     ],
                     "result_type" : [
                        "cv",
                        [
                           [
                              "abundance",
                              "number of reads with hits in annotation"
                           ],
                           [
                              "evalue",
                              "average e-value exponent of hits in annotation"
                           ],
                           [
                              "identity",
                              "average percent identity of hits in annotation"
                           ],
                           [
                              "length",
                              "average alignment length of hits in annotation"
                           ]
                        ]
                     ],
                     "version" : [
                        "int",
                        "M5NR version, default 1"
                     ],
                     "filter" : [
                        "string",
                        "filter the return results to only include abundances based on genes with this function"
                     ],
                     "hide_metadata" : [
                        "boolean",
                        "if true do not return metagenome metadata in 'columns' object, default is false"
                     ],
                     "taxid" : [
                        "boolean",
                        "if true, return annotation ID as NCBI tax id. Only for group_levels with a tax_id"
                     ],
                     "grep" : [
                        "string",
                        "filter the return results to only include annotations that contain this text"
                     ],
                     "asynchronous" : [
                        "boolean",
                        "if true return process id to query status resource for results, default is false"
                     ],
                     "group_level" : [
                        "cv",
                        [
                           [
                              "strain",
                              "bottom organism taxonomic level"
                           ],
                           [
                              "species",
                              "organism type level"
                           ],
                           [
                              "genus",
                              "organism taxonomic level"
                           ],
                           [
                              "family",
                              "organism taxonomic level"
                           ],
                           [
                              "order",
                              "organism taxonomic level"
                           ],
                           [
                              "class",
                              "organism taxonomic level"
                           ],
                           [
                              "phylum",
                              "organism taxonomic level"
                           ],
                           [
                              "domain",
                              "top organism taxonomic level"
                           ]
                        ]
                     ],
                     "filter_level" : [
                        "cv",
                        [
                           [
                              "function",
                              "bottom function ontology level"
                           ],
                           [
                              "level3",
                              "function ontology level"
                           ],
                           [
                              "level2",
                              "function ontology level"
                           ],
                           [
                              "level1",
                              "top function ontology level"
                           ]
                        ]
                     ],
                     "id" : [
                        "string",
                        "one or more metagenome or project unique identifier"
                     ]
                  }
               }
            },
            {
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/matrix/function",
               "type" : "synchronous or asynchronous",
               "name" : "function",
               "example" : [
                  "http://kbase.us/services/communities/1/matrix/function?id=mgm4447943.3&id=mgm4447192.3&id=mgm4447102.3&id=mgm4447103.3&group_level=level3&source=Subsystems&result_type=abundance&identity=80&filter_level=phylum&filter=Firmicutes",
                  "retrieve abundance matrix of Subsystem annotations at level3 for listed metagenomes at % identity > 80, filtered to return annotations only in phylum Firmicutes"
               ],
               "attributes" : {
                  "generated_by" : [
                     "string",
                     "identifier of the data generator"
                  ],
                  "matrix_element_value" : [
                     "string",
                     "result_type of the elements in the return matrix"
                  ],
                  "matrix_type" : [
                     "string",
                     "type of the data encoding matrix (dense or sparse)"
                  ],
                  "date" : [
                     "date",
                     "time the output data was generated"
                  ],
                  "id" : [
                     "string",
                     "unique object identifier"
                  ],
                  "data" : [
                     "list",
                     [
                        "list",
                        [
                           "float",
                           "the matrix values"
                        ]
                     ]
                  ],
                  "matrix_element_type" : [
                     "string",
                     "data type of the elements in the return matrix"
                  ],
                  "columns" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "id" : [
                                 "string",
                                 "unique metagenome identifier"
                              ],
                              "metadata" : [
                                 "hash",
                                 "key value pairs describing metadata"
                              ]
                           },
                           "columns object"
                        ]
                     ]
                  ],
                  "shape" : [
                     "list",
                     [
                        "integer",
                        "list of the dimension sizes of the return matrix"
                     ]
                  ],
                  "type" : [
                     "string",
                     "type of the data in the return table (taxon, function or gene)"
                  ],
                  "rows" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "metadata" : [
                                 "hash",
                                 "key value pairs describing metadata"
                              ],
                              "id" : [
                                 "string",
                                 "unique annotation text"
                              ]
                           },
                           "rows object"
                        ]
                     ]
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "format" : [
                     "string",
                     "format specification name"
                  ],
                  "format_url" : [
                     "string",
                     "url to the format specification"
                  ]
               },
               "parameters" : {
                  "required" : {},
                  "options" : {
                     "identity" : [
                        "int",
                        "percent value for minimum % identity cutoff: default is 60"
                     ],
                     "filter" : [
                        "string",
                        "filter the return results to only include abundances based on genes with this organism"
                     ],
                     "hide_metadata" : [
                        "boolean",
                        "if true do not return metagenome metadata in 'columns' object, default is false"
                     ],
                     "source" : [
                        "cv",
                        [
                           [
                              "Subsystems",
                              "ontology database, type ontology only"
                           ],
                           [
                              "NOG",
                              "ontology database, type ontology only"
                           ],
                           [
                              "COG",
                              "ontology database, type ontology only"
                           ],
                           [
                              "KO",
                              "ontology database, type ontology only"
                           ]
                        ]
                     ],
                     "length" : [
                        "int",
                        "value for minimum alignment length cutoff: default is 15"
                     ],
                     "grep" : [
                        "string",
                        "filter the return results to only include annotations that contain this text"
                     ],
                     "evalue" : [
                        "int",
                        "negative exponent value for maximum e-value cutoff: default is 5"
                     ],
                     "filter_source" : [
                        "cv",
                        [
                           [
                              "M5NR",
                              "comprehensive protein database"
                           ],
                           [
                              "M5RNA",
                              "comprehensive RNA database"
                           ],
                           [
                              "RefSeq",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "GenBank",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "IMG",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "SEED",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "TrEMBL",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "SwissProt",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "PATRIC",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "KEGG",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "RDP",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "Greengenes",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "LSU",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "SSU",
                              "RNA database, type organism, function, feature"
                           ]
                        ]
                     ],
                     "asynchronous" : [
                        "boolean",
                        "if true return process id to query status resource for results, default is false"
                     ],
                     "group_level" : [
                        "cv",
                        [
                           [
                              "function",
                              "bottom function ontology level"
                           ],
                           [
                              "level3",
                              "function ontology level"
                           ],
                           [
                              "level2",
                              "function ontology level"
                           ],
                           [
                              "level1",
                              "top function ontology level"
                           ]
                        ]
                     ],
                     "result_type" : [
                        "cv",
                        [
                           [
                              "abundance",
                              "number of reads with hits in annotation"
                           ],
                           [
                              "evalue",
                              "average e-value exponent of hits in annotation"
                           ],
                           [
                              "identity",
                              "average percent identity of hits in annotation"
                           ],
                           [
                              "length",
                              "average alignment length of hits in annotation"
                           ]
                        ]
                     ],
                     "id" : [
                        "string",
                        "one or more metagenome or project unique identifier"
                     ],
                     "version" : [
                        "int",
                        "M5NR version, default 1"
                     ],
                     "filter_level" : [
                        "cv",
                        [
                           [
                              "strain",
                              "bottom organism taxonomic level"
                           ],
                           [
                              "species",
                              "organism type level"
                           ],
                           [
                              "genus",
                              "organism taxonomic level"
                           ],
                           [
                              "family",
                              "organism taxonomic level"
                           ],
                           [
                              "order",
                              "organism taxonomic level"
                           ],
                           [
                              "class",
                              "organism taxonomic level"
                           ],
                           [
                              "phylum",
                              "organism taxonomic level"
                           ],
                           [
                              "domain",
                              "top organism taxonomic level"
                           ]
                        ]
                     ]
                  },
                  "body" : {}
               },
               "description" : "Returns a BIOM object."
            },
            {
               "description" : "Returns a BIOM object.",
               "parameters" : {
                  "body" : {},
                  "required" : {},
                  "options" : {
                     "result_type" : [
                        "cv",
                        [
                           [
                              "abundance",
                              "number of reads with hits in annotation"
                           ],
                           [
                              "evalue",
                              "average e-value exponent of hits in annotation"
                           ],
                           [
                              "identity",
                              "average percent identity of hits in annotation"
                           ],
                           [
                              "length",
                              "average alignment length of hits in annotation"
                           ]
                        ]
                     ],
                     "filter_level" : [
                        "cv",
                        [
                           [
                              "strain",
                              "bottom organism taxonomic level"
                           ],
                           [
                              "species",
                              "organism type level"
                           ],
                           [
                              "genus",
                              "organism taxonomic level"
                           ],
                           [
                              "family",
                              "organism taxonomic level"
                           ],
                           [
                              "order",
                              "organism taxonomic level"
                           ],
                           [
                              "class",
                              "organism taxonomic level"
                           ],
                           [
                              "phylum",
                              "organism taxonomic level"
                           ],
                           [
                              "domain",
                              "top organism taxonomic level"
                           ]
                        ]
                     ],
                     "id" : [
                        "string",
                        "one or more metagenome or project unique identifier"
                     ],
                     "version" : [
                        "int",
                        "M5NR version, default 1"
                     ],
                     "asynchronous" : [
                        "boolean",
                        "if true return process id to query status resource for results, default is false"
                     ],
                     "evalue" : [
                        "int",
                        "negative exponent value for maximum e-value cutoff: default is 5"
                     ],
                     "hide_annotation" : [
                        "boolean",
                        "if true do not return feature metadata in 'rows' object, default is false"
                     ],
                     "length" : [
                        "int",
                        "value for minimum alignment length cutoff: default is 15"
                     ],
                     "hide_metadata" : [
                        "boolean",
                        "if true do not return metagenome metadata in 'columns' object, default is false"
                     ],
                     "source" : [
                        "cv",
                        [
                           [
                              "RefSeq",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "GenBank",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "IMG",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "SEED",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "TrEMBL",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "SwissProt",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "PATRIC",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "KEGG",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "RDP",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "Greengenes",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "LSU",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "SSU",
                              "RNA database, type organism, function, feature"
                           ]
                        ]
                     ],
                     "filter" : [
                        "string",
                        "filter the return results to only include abundances based on genes with this organism"
                     ],
                     "identity" : [
                        "int",
                        "percent value for minimum % identity cutoff: default is 60"
                     ]
                  }
               },
               "request" : "http://kbase.us/services/communities/1/matrix/feature",
               "type" : "synchronous or asynchronous",
               "method" : "GET",
               "name" : "feature",
               "attributes" : {
                  "generated_by" : [
                     "string",
                     "identifier of the data generator"
                  ],
                  "matrix_element_value" : [
                     "string",
                     "result_type of the elements in the return matrix"
                  ],
                  "matrix_type" : [
                     "string",
                     "type of the data encoding matrix (dense or sparse)"
                  ],
                  "date" : [
                     "date",
                     "time the output data was generated"
                  ],
                  "id" : [
                     "string",
                     "unique object identifier"
                  ],
                  "data" : [
                     "list",
                     [
                        "list",
                        [
                           "float",
                           "the matrix values"
                        ]
                     ]
                  ],
                  "matrix_element_type" : [
                     "string",
                     "data type of the elements in the return matrix"
                  ],
                  "columns" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "id" : [
                                 "string",
                                 "unique metagenome identifier"
                              ],
                              "metadata" : [
                                 "hash",
                                 "key value pairs describing metadata"
                              ]
                           },
                           "columns object"
                        ]
                     ]
                  ],
                  "shape" : [
                     "list",
                     [
                        "integer",
                        "list of the dimension sizes of the return matrix"
                     ]
                  ],
                  "type" : [
                     "string",
                     "type of the data in the return table (taxon, function or gene)"
                  ],
                  "rows" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "id" : [
                                 "string",
                                 "unique annotation text"
                              ],
                              "metadata" : [
                                 "hash",
                                 "key value pairs describing metadata"
                              ]
                           },
                           "rows object"
                        ]
                     ]
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "format_url" : [
                     "string",
                     "url to the format specification"
                  ],
                  "format" : [
                     "string",
                     "format specification name"
                  ]
               },
               "example" : [
                  "http://kbase.us/services/communities/1/matrix/feature?id=mgm4447943.3&id=mgm4447192.3&id=mgm4447102.3&id=mgm4447103.3&source=KEGG&result_type=evalue&length=25",
                  "retrieve e-value matrix of KEGG protein annotations for listed metagenomes at alignment length > 25"
               ]
            }
         ],
         "url" : "http://kbase.us/services/communities/1/matrix",
         "description" : "A profile in biom format that contains abundance counts",
         "type" : "object",
         "documentation" : "http://kbase.us/services/communities/1/api.html#matrix",
         "name" : "matrix"
      },
      {
         "requests" : [
            {
               "name" : "info",
               "attributes" : "self",
               "parameters" : {
                  "body" : {},
                  "options" : {},
                  "required" : {}
               },
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/metadata",
               "description" : "Returns description of parameters and attributes.",
               "type" : "synchronous"
            },
            {
               "parameters" : {
                  "required" : {},
                  "options" : {},
                  "body" : {}
               },
               "description" : "Returns static template for metadata object relationships and types",
               "example" : [
                  "http://kbase.us/services/communities/1/metadata/template",
                  "metadata template"
               ],
               "attributes" : {
                  "library" : [
                     "hash",
                     [
                        {
                           "key" : [
                              "string",
                              "library type"
                           ],
                           "value" : [
                              "hash",
                              "hash of metadata objects by label"
                           ]
                        },
                        "libraries and their metadata"
                     ]
                  ],
                  "ep" : [
                     "hash",
                     [
                        {
                           "key" : [
                              "string",
                              "environmental package type"
                           ],
                           "value" : [
                              "hash",
                              "hash of metadata objects by label"
                           ]
                        },
                        "eps and their metadata"
                     ]
                  ],
                  "project" : [
                     "hash",
                     [
                        {
                           "value" : [
                              "hash",
                              "hash of metadata objects by label"
                           ],
                           "key" : [
                              "string",
                              "project type"
                           ]
                        },
                        "projects and their metadata"
                     ]
                  ],
                  "sample" : [
                     "hash",
                     [
                        {
                           "value" : [
                              "hash",
                              "hash of metadata objects by label"
                           ],
                           "key" : [
                              "string",
                              "sample type"
                           ]
                        },
                        "samples and their metadata"
                     ]
                  ]
               },
               "name" : "template",
               "method" : "GET",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/metadata/template"
            },
            {
               "example" : [
                  "http://kbase.us/services/communities/1/metadata/cv?label=country",
                  "metadata controlled vocabularies"
               ],
               "attributes" : {
                  "ont_info" : [
                     "hash",
                     [
                        {
                           "value" : [
                              "list",
                              [
                                 "string",
                                 "ontology url and ID"
                              ]
                           ],
                           "key" : [
                              "string",
                              "metadata label"
                           ]
                        },
                        "term IDs for metadata"
                     ]
                  ],
                  "select" : [
                     "hash",
                     [
                        {
                           "value" : [
                              "list",
                              [
                                 "string",
                                 "CV term"
                              ]
                           ],
                           "key" : [
                              "string",
                              "metadata label"
                           ]
                        },
                        "list of CV terms for metadata"
                     ]
                  ],
                  "ontology" : [
                     "hash",
                     [
                        {
                           "key" : [
                              "string",
                              "metadata label"
                           ],
                           "value" : [
                              "list",
                              [
                                 "list",
                                 [
                                    "string",
                                    "ontology term and ID"
                                 ]
                              ]
                           ]
                        },
                        "list of CV terms for metadata"
                     ]
                  ]
               },
               "name" : "cv",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/metadata/cv",
               "method" : "GET",
               "description" : "Returns static controlled vocabularies used in metadata. By default returns all CVs at latest version. If label and version options used, returns those specific values.",
               "parameters" : {
                  "body" : {},
                  "options" : {
                     "version" : [
                        "string",
                        "version of CV ontology to use"
                     ],
                     "label" : [
                        "string",
                        "metadata label"
                     ]
                  },
                  "required" : {}
               }
            },
            {
               "example" : [
                  "http://kbase.us/services/communities/1/metadata/ontology?name=biome&version=2013-04-27",
                  "metadata ontology lookup"
               ],
               "attributes" : {
                  "showRoot" : [
                     "boolean",
                     "option to show root when displaying"
                  ],
                  "rootNode" : [
                     "string",
                     "ontology ID of root"
                  ],
                  "name" : [
                     "string",
                     "ontology name"
                  ],
                  "type" : [
                     "string",
                     "this type"
                  ],
                  "version" : [
                     "string",
                     "version of this ontology"
                  ],
                  "nodes" : [
                     "hash",
                     [
                        {
                           "value" : [
                              "hash",
                              "hash of information and relationships for given ontology ID"
                           ],
                           "key" : [
                              "string",
                              "ontology ID"
                           ]
                        },
                        "info for ontology ID"
                     ]
                  ]
               },
               "name" : "ontology",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/metadata/ontology",
               "method" : "GET",
               "description" : "Returns static ontology used in metadata for the given name and version.",
               "parameters" : {
                  "options" : {},
                  "required" : {
                     "name" : [
                        "string",
                        "ontology name"
                     ],
                     "version" : [
                        "string",
                        "version of ontology to use"
                     ]
                  },
                  "body" : {}
               }
            },
            {
               "name" : "version",
               "example" : [
                  "http://kbase.us/services/communities/1/metadata/version?name=biome",
                  "metadata version lookup"
               ],
               "attributes" : {
                  "biome" : [
                     "list",
                     [
                        "string",
                        "version number"
                     ]
                  ],
                  "feature" : [
                     "list",
                     [
                        "string",
                        "version number"
                     ]
                  ],
                  "material" : [
                     "list",
                     [
                        "string",
                        "version number"
                     ]
                  ]
               },
               "request" : "http://kbase.us/services/communities/1/metadata/version",
               "type" : "synchronous",
               "method" : "GET",
               "description" : "Returns all versions available for given ontology name.",
               "parameters" : {
                  "options" : {
                     "label" : [
                        "string",
                        "metadata label"
                     ]
                  },
                  "required" : {},
                  "body" : {}
               }
            },
            {
               "example" : [
                  "http://kbase.us/services/communities/1/metadata/view/biome",
                  "all biome values"
               ],
               "attributes" : {
                  "total" : [
                     "int",
                     "count of unique values"
                  ],
                  "values" : [
                     "list",
                     [
                        "string",
                        "metadata value"
                     ]
                  ],
                  "label" : [
                     "string",
                     "metadata label"
                  ]
               },
               "name" : "view",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/metadata/view/{label}",
               "method" : "GET",
               "description" : "Returns list of unique metadata values for given label",
               "parameters" : {
                  "required" : {
                     "label" : [
                        "string",
                        "valid metadata label"
                     ]
                  },
                  "options" : {},
                  "body" : {}
               }
            },
            {
               "attributes" : {
                  "sampleNum" : [
                     "int",
                     "number of samples in project"
                  ],
                  "data" : [
                     "hash",
                     [
                        {
                           "key" : [
                              "string",
                              "metadata label"
                           ],
                           "value" : [
                              "object",
                              "project metadata objects"
                           ]
                        },
                        "hash of metadata by label"
                     ]
                  ],
                  "id" : [
                     "string",
                     "unique object identifier"
                  ],
                  "samples" : [
                     "list",
                     [
                        "object",
                        "sample object containing sample metadata, sample libraries, sample envPackage"
                     ]
                  ],
                  "name" : [
                     "string",
                     "human readable identifier"
                  ]
               },
               "example" : [
                  "http://kbase.us/services/communities/1/metadata/export/mgp128",
                  "all metadata for project mgp128"
               ],
               "name" : "export",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/metadata/export/{ID}",
               "method" : "GET",
               "description" : "Returns full nested metadata for a project in same format as template, or metadata for a single metagenome.",
               "parameters" : {
                  "body" : {},
                  "options" : {},
                  "required" : {
                     "id" : [
                        "string",
                        "unique object identifier"
                     ]
                  }
               }
            },
            {
               "name" : "import",
               "attributes" : {
                  "errors" : [
                     "list",
                     [
                        "string",
                        "error message that may have occurred"
                     ]
                  ],
                  "project" : [
                     "string",
                     "unique object identifier"
                  ],
                  "added" : [
                     "list",
                     [
                        "string",
                        "ID of metagenome with metadata added"
                     ]
                  ]
               },
               "example" : [
                  "curl -X POST -F \"metagenome=mgm12345\" -F \"metagenome=mgm67890\" -F \"upload=@metadata.xlsx\" \"http://kbase.us/services/communities/1/metadata/import\"",
                  "create project with metadata from file 'metadata.xlsx'"
               ],
               "request" : "http://kbase.us/services/communities/1/metadata/import",
               "type" : "synchronous",
               "method" : "POST",
               "description" : "Create project with given metadata spreadsheet and metagenome IDs, either upload or shock node",
               "parameters" : {
                  "required" : {},
                  "options" : {},
                  "body" : {
                     "metagenome" : [
                        "string",
                        "unique metagenome ID"
                     ],
                     "node_id" : [
                        "string",
                        "shock node ID of metadata spreadsheet"
                     ],
                     "upload" : [
                        "file",
                        "xlsx or xls format spreadsheet with metadata"
                     ]
                  }
               }
            },
            {
               "name" : "update",
               "attributes" : {
                  "project" : [
                     "string",
                     "unique object identifier"
                  ],
                  "errors" : [
                     "list",
                     [
                        "string",
                        "error message that may have occurred"
                     ]
                  ],
                  "added" : [
                     "list",
                     [
                        "string",
                        "ID of metagenome with metadata added"
                     ]
                  ]
               },
               "example" : [
                  "curl -X POST -F \"project=mgp123\" -F \"upload=@metadata.xlsx\" \"http://kbase.us/services/communities/1/metadata/update\"",
                  "update project mgp123 with metadata from file 'metadata.xlsx'"
               ],
               "request" : "http://kbase.us/services/communities/1/metadata/update",
               "type" : "synchronous",
               "method" : "POST",
               "description" : "Update project with given metadata spreadsheet and metagenome IDs, either upload or shock node",
               "parameters" : {
                  "options" : {},
                  "required" : {},
                  "body" : {
                     "metagenome" : [
                        "string",
                        "unique metagenome ID"
                     ],
                     "map_by_id" : [
                        "boolean",
                        "option to map metadata from spreadsheet to metagenomes using ID, default is name"
                     ],
                     "node_id" : [
                        "string",
                        "shock node ID of metadata spreadsheet"
                     ],
                     "upload" : [
                        "file",
                        "xlsx or xls format spreadsheet with metadata"
                     ],
                     "project" : [
                        "string",
                        "unique project identifier"
                     ]
                  }
               }
            },
            {
               "method" : "POST",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/metadata/validate",
               "attributes" : {
                  "message" : [
                     "string",
                     "if not valid, reason why"
                  ],
                  "metadata" : [
                     "object",
                     "valid metadata object for project and its samples and libraries"
                  ],
                  "is_valid" : [
                     "boolean",
                     "the metadata sheet is valid"
                  ]
               },
               "example" : [
                  "curl -X POST -F \"upload=@metadata.xlsx\" \"http://kbase.us/services/communities/1/metadata/validate\"",
                  "validate file 'metadata.xlsx' against MG-RAST metadata template"
               ],
               "name" : "validate",
               "parameters" : {
                  "body" : {
                     "node_id" : [
                        "string",
                        "shock node ID of metadata spreadsheet"
                     ],
                     "upload" : [
                        "file",
                        "xlsx or xls format spreadsheet with metadata"
                     ]
                  },
                  "options" : {},
                  "required" : {}
               },
               "description" : "Validate given metadata spreadsheet, either upload or shock node"
            },
            {
               "name" : "validate",
               "example" : [
                  "http://kbase.us/services/communities/1/metadata/validate?category=sample&label=material&value=soil",
                  "check if 'soil' is a valid term for sample material"
               ],
               "attributes" : {
                  "is_valid" : [
                     "boolean",
                     "the inputed value is valid for the given category and label"
                  ],
                  "message" : [
                     "string",
                     "if not valid, reason why"
                  ]
               },
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/metadata/validate",
               "type" : "synchronous",
               "parameters" : {
                  "body" : {},
                  "options" : {
                     "label" : [
                        "string",
                        "metadata label"
                     ],
                     "group" : [
                        "cv",
                        [
                           [
                              "mixs",
                              "label is part of MIxS (minimal) metadata"
                           ],
                           [
                              "mims",
                              "label is part of MIMS (metagenome) metadata"
                           ],
                           [
                              "migs",
                              "label is part of MIGS (genome) metadata"
                           ]
                        ]
                     ],
                     "value" : [
                        "string",
                        "metadata value"
                     ],
                     "category" : [
                        "cv",
                        [
                           [
                              "project",
                              "label belongs to project metadata"
                           ],
                           [
                              "sample",
                              "label belongs to sample metadata"
                           ],
                           [
                              "library",
                              "label belongs to library metadata"
                           ],
                           [
                              "env_package",
                              "label belongs to env_package metadata"
                           ]
                        ]
                     ],
                     "version" : [
                        "string",
                        "version of CV ontology to use"
                     ]
                  },
                  "required" : {}
               },
               "description" : "Validate given metadata value"
            }
         ],
         "description" : "Metagenomic metadata is data providing information about one or more aspects of a set sequences from a sample of some environment",
         "type" : "object",
         "url" : "http://kbase.us/services/communities/1/metadata",
         "documentation" : "http://kbase.us/services/communities/1/api.html#metadata",
         "name" : "metadata"
      },
      {
         "requests" : [
            {
               "parameters" : {
                  "body" : {},
                  "required" : {},
                  "options" : {}
               },
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/metagenome",
               "description" : "Returns description of parameters and attributes.",
               "type" : "synchronous",
               "name" : "info",
               "attributes" : "self"
            },
            {
               "parameters" : {
                  "required" : {},
                  "options" : {
                     "md5" : [
                        "string",
                        "search parameter: md5 checksum of feature sequence"
                     ],
                     "function" : [
                        "string",
                        "search parameter: query string for function"
                     ],
                     "verbosity" : [
                        "cv",
                        [
                           [
                              "minimal",
                              "returns only minimal information"
                           ],
                           [
                              "mixs",
                              "returns all GSC MIxS metadata"
                           ],
                           [
                              "metadata",
                              "returns minimal with metadata"
                           ],
                           [
                              "stats",
                              "returns minimal with statistics"
                           ],
                           [
                              "full",
                              "returns all metadata and statistics"
                           ]
                        ]
                     ],
                     "direction" : [
                        "cv",
                        [
                           [
                              "asc",
                              "sort by ascending order"
                           ],
                           [
                              "desc",
                              "sort by descending order"
                           ]
                        ]
                     ],
                     "order" : [
                        "string",
                        "metagenome object field to sort by (default is id)"
                     ],
                     "match" : [
                        "cv",
                        [
                           [
                              "all",
                              "return metagenomes that match all search parameters"
                           ],
                           [
                              "any",
                              "return metagenomes that match any search parameters"
                           ]
                        ]
                     ],
                     "offset" : [
                        "integer",
                        "zero based index of the first data object to be returned"
                     ],
                     "metadata" : [
                        "string",
                        "search parameter: query string for any metadata field"
                     ],
                     "organism" : [
                        "string",
                        "search parameter: query string for organism"
                     ],
                     "status" : [
                        "cv",
                        [
                           [
                              "both",
                              "returns all data (public and private) user has access to view"
                           ],
                           [
                              "public",
                              "returns all public data"
                           ],
                           [
                              "private",
                              "returns private data user has access to view"
                           ]
                        ]
                     ],
                     "limit" : [
                        "integer",
                        "maximum number of items requested"
                     ]
                  },
                  "body" : {}
               },
               "description" : "Returns a set of data matching the query criteria.",
               "method" : "GET",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/metagenome",
               "attributes" : {
                  "total_count" : [
                     "integer",
                     "total number of available data items"
                  ],
                  "data" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "collection_date" : [
                                 "string",
                                 "date sample collected"
                              ],
                              "url" : [
                                 "uri",
                                 "resource location of this object instance"
                              ],
                              "status" : [
                                 "cv",
                                 [
                                    [
                                       "public",
                                       "metagenome is public"
                                    ],
                                    [
                                       "private",
                                       "metagenome is private"
                                    ]
                                 ]
                              ],
                              "seq_method" : [
                                 "string",
                                 "sequencing method"
                              ],
                              "name" : [
                                 "string",
                                 "name of metagenome"
                              ],
                              "id" : [
                                 "string",
                                 "unique metagenome identifier"
                              ],
                              "feature" : [
                                 "string",
                                 "environmental feature, EnvO term"
                              ],
                              "PI_firstname" : [
                                 "string",
                                 "principal investigator's first name"
                              ],
                              "material" : [
                                 "string",
                                 "environmental material, EnvO term"
                              ],
                              "created" : [
                                 "date",
                                 "time the metagenome was first created"
                              ],
                              "project_id" : [
                                 "string",
                                 "id of project containing metagenome"
                              ],
                              "project_name" : [
                                 "string",
                                 "name of project containing metagenome"
                              ],
                              "location" : [
                                 "string",
                                 "location where sample taken"
                              ],
                              "sequence_type" : [
                                 "string",
                                 "sequencing type"
                              ],
                              "country" : [
                                 "string",
                                 "country where sample taken"
                              ],
                              "PI_lastname" : [
                                 "string",
                                 "principal investigator's last name"
                              ],
                              "biome" : [
                                 "string",
                                 "environmental biome, EnvO term"
                              ],
                              "longitude" : [
                                 "string",
                                 "longitude where sample taken"
                              ],
                              "env_package_type" : [
                                 "string",
                                 "environmental package of sample, GSC term"
                              ],
                              "latitude" : [
                                 "string",
                                 "latitude where sample taken"
                              ]
                           },
                           "metagenome object"
                        ]
                     ]
                  ],
                  "version" : [
                     "integer",
                     "version of the object"
                  ],
                  "prev" : [
                     "uri",
                     "link to the next set or null if this is the last set"
                  ],
                  "offset" : [
                     "integer",
                     "zero based index of the first returned data item"
                  ],
                  "order" : [
                     "string",
                     "name of the attribute the returned data is ordered by"
                  ],
                  "next" : [
                     "uri",
                     "link to the previous set or null if this is the first set"
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "limit" : [
                     "integer",
                     "maximum number of data items returned, default is 10"
                  ]
               },
               "example" : [
                  "http://kbase.us/services/communities/1/metagenome?limit=20&order=name",
                  "retrieve the first 20 metagenomes ordered by name"
               ],
               "name" : "query"
            },
            {
               "name" : "instance",
               "attributes" : {
                  "name" : [
                     "string",
                     "name of metagenome"
                  ],
                  "project" : [
                     "reference project",
                     "reference to the project object"
                  ],
                  "metadata" : [
                     "hash",
                     "key value pairs describing all metadata"
                  ],
                  "sequence_type" : [
                     "string",
                     "sequencing type"
                  ],
                  "status" : [
                     "cv",
                     [
                        [
                           "public",
                           "metagenome is public"
                        ],
                        [
                           "private",
                           "metagenome is private"
                        ]
                     ]
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "pipeline_parameters" : [
                     "hash",
                     "key value pairs describing pipeline parameters"
                  ],
                  "created" : [
                     "date",
                     "time the metagenome was first created"
                  ],
                  "statistics" : [
                     "hash",
                     "key value pairs describing statistics"
                  ],
                  "sample" : [
                     "reference sample",
                     "reference to the related sample object"
                  ],
                  "mixs" : [
                     "hash",
                     "key value pairs describing MIxS metadata"
                  ],
                  "library" : [
                     "reference library",
                     "reference to the related library object"
                  ],
                  "id" : [
                     "string",
                     "unique metagenome identifier"
                  ],
                  "version" : [
                     "integer",
                     "version of the metagenome"
                  ]
               },
               "example" : [
                  "http://kbase.us/services/communities/1/metagenome/mgm4447943.3?verbosity=metadata",
                  "retrieve all metadata for metagenome mgm4447943.3"
               ],
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/metagenome/{ID}",
               "type" : "synchronous",
               "parameters" : {
                  "options" : {
                     "verbosity" : [
                        "cv",
                        [
                           [
                              "minimal",
                              "returns only minimal information"
                           ],
                           [
                              "metadata",
                              "returns minimal with metadata"
                           ],
                           [
                              "stats",
                              "returns minimal with statistics"
                           ],
                           [
                              "full",
                              "returns all metadata and statistics"
                           ]
                        ]
                     ]
                  },
                  "required" : {
                     "id" : [
                        "string",
                        "unique object identifier"
                     ]
                  },
                  "body" : {}
               },
               "description" : "Returns a single data object."
            }
         ],
         "description" : "A metagenome is an analyzed set sequences from a sample of some environment",
         "url" : "http://kbase.us/services/communities/1/metagenome",
         "type" : "object",
         "documentation" : "http://kbase.us/services/communities/1/api.html#metagenome",
         "name" : "metagenome"
      },
      {
         "type" : "object",
         "url" : "http://kbase.us/services/communities/1/profile",
         "description" : "A profile in biom format that contains abundance and similarity values",
         "requests" : [
            {
               "request" : "http://kbase.us/services/communities/1/profile",
               "type" : "synchronous",
               "description" : "Returns description of parameters and attributes.",
               "parameters" : {
                  "options" : {},
                  "required" : {},
                  "body" : {}
               },
               "method" : "GET",
               "name" : "info",
               "attributes" : "self"
            },
            {
               "name" : "instance",
               "attributes" : {
                  "date" : [
                     "date",
                     "time the output data was generated"
                  ],
                  "matrix_type" : [
                     "string",
                     "type of the data encoding matrix (dense or sparse)"
                  ],
                  "id" : [
                     "string",
                     "unique object identifier"
                  ],
                  "data" : [
                     "list",
                     [
                        "list",
                        [
                           "float",
                           "the matrix values"
                        ]
                     ]
                  ],
                  "generated_by" : [
                     "string",
                     "identifier of the data generator"
                  ],
                  "type" : [
                     "string",
                     "type of the data in the return table (taxon, function or gene)"
                  ],
                  "rows" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "metadata" : [
                                 "hash",
                                 "key value pairs describing metadata"
                              ],
                              "id" : [
                                 "string",
                                 "unique identifier"
                              ]
                           },
                           "rows object"
                        ]
                     ]
                  ],
                  "format" : [
                     "string",
                     "format specification name"
                  ],
                  "format_url" : [
                     "string",
                     "url to the format specification"
                  ],
                  "matrix_element_type" : [
                     "string",
                     "data type of the elements in the return matrix"
                  ],
                  "columns" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "id" : [
                                 "string",
                                 "unique identifier"
                              ],
                              "metadata" : [
                                 "hash",
                                 "list of metadata, contains the metagenome"
                              ]
                           },
                           "columns object"
                        ]
                     ]
                  ],
                  "shape" : [
                     "list",
                     [
                        "integer",
                        "list of the dimension sizes of the return matrix"
                     ]
                  ]
               },
               "description" : "Returns a single data object in BIOM format",
               "type" : "synchronous",
               "parameters" : {
                  "options" : {
                     "length" : [
                        "int",
                        "value for minimum alignment length cutoff: default is 15"
                     ],
                     "type" : [
                        "cv",
                        [
                           [
                              "organism",
                              "return organism data"
                           ],
                           [
                              "function",
                              "return functional data"
                           ],
                           [
                              "feature",
                              "return feature data"
                           ]
                        ]
                     ],
                     "hit_type" : [
                        "cv",
                        [
                           [
                              "all",
                              "returns results based on all organisms that map to top hit per read-feature"
                           ],
                           [
                              "single",
                              "returns results based on a single organism for top hit per read-feature"
                           ],
                           [
                              "lca",
                              "returns results based on the Least Common Ancestor for all organisms (M5NR+M5RNA only) that map to hits from a read-feature"
                           ]
                        ]
                     ],
                     "source" : [
                        "cv",
                        [
                           [
                              "M5NR",
                              "comprehensive protein database"
                           ],
                           [
                              "RefSeq",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "GenBank",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "IMG",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "SEED",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "TrEMBL",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "SwissProt",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "PATRIC",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "KEGG",
                              "protein database, type organism, function, feature"
                           ],
                           [
                              "M5RNA",
                              "comprehensive RNA database"
                           ],
                           [
                              "RDP",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "Greengenes",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "LSU",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "SSU",
                              "RNA database, type organism, function, feature"
                           ],
                           [
                              "Subsystems",
                              "ontology database, type ontology only"
                           ],
                           [
                              "NOG",
                              "ontology database, type ontology only"
                           ],
                           [
                              "COG",
                              "ontology database, type ontology only"
                           ],
                           [
                              "KO",
                              "ontology database, type ontology only"
                           ]
                        ]
                     ],
                     "nocutoff" : [
                        "boolean",
                        "if true, get data using no cutoffs"
                     ],
                     "evalue" : [
                        "int",
                        "negative exponent value for maximum e-value cutoff: default is 5"
                     ],
                     "identity" : [
                        "int",
                        "percent value for minimum % identity cutoff: default is 60"
                     ]
                  },
                  "required" : {
                     "id" : [
                        "string",
                        "unique object identifier"
                     ]
                  },
                  "body" : {}
               },
               "method" : "GET"
            }
         ],
         "documentation" : "http://kbase.us/services/communities/1/api.html#profile",
         "name" : "profile"
      },
      {
         "requests" : [
            {
               "name" : "info",
               "attributes" : "self",
               "parameters" : {
                  "body" : {},
                  "required" : {},
                  "options" : {}
               },
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/project",
               "type" : "synchronous",
               "description" : "Returns description of parameters and attributes."
            },
            {
               "parameters" : {
                  "required" : {},
                  "options" : {
                     "verbosity" : [
                        "cv",
                        [
                           [
                              "minimal",
                              "returns only minimal information"
                           ],
                           [
                              "verbose",
                              "returns all metadata"
                           ],
                           [
                              "full",
                              "returns all metadata and references"
                           ]
                        ]
                     ],
                     "order" : [
                        "cv",
                        [
                           [
                              "id",
                              "return data objects ordered by id"
                           ],
                           [
                              "name",
                              "return data objects ordered by name"
                           ]
                        ]
                     ],
                     "offset" : [
                        "integer",
                        "zero based index of the first data object to be returned"
                     ],
                     "limit" : [
                        "integer",
                        "maximum number of items requested"
                     ]
                  },
                  "body" : {}
               },
               "description" : "Returns a set of data matching the query criteria.",
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/project",
               "type" : "synchronous",
               "name" : "query",
               "attributes" : {
                  "offset" : [
                     "integer",
                     "zero based index of the first returned data item"
                  ],
                  "prev" : [
                     "uri",
                     "link to the next set or null if this is the last set"
                  ],
                  "order" : [
                     "string",
                     "name of the attribute the returned data is ordered by"
                  ],
                  "total_count" : [
                     "integer",
                     "total number of available data items"
                  ],
                  "next" : [
                     "uri",
                     "link to the previous set or null if this is the first set"
                  ],
                  "data" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "metadata" : [
                                 "hash",
                                 "key value pairs describing metadata"
                              ],
                              "name" : [
                                 "string",
                                 "human readable identifier"
                              ],
                              "libraries" : [
                                 "list",
                                 [
                                    "reference library",
                                    "a list of references to the related library objects"
                                 ]
                              ],
                              "created" : [
                                 "date",
                                 "time the object was first created"
                              ],
                              "url" : [
                                 "uri",
                                 "resource location of this object instance"
                              ],
                              "pi" : [
                                 "string",
                                 "the first and last name of the principal investigator of the project"
                              ],
                              "status" : [
                                 "cv",
                                 [
                                    [
                                       "public",
                                       "object is public"
                                    ],
                                    [
                                       "private",
                                       "object is private"
                                    ]
                                 ]
                              ],
                              "funding_source" : [
                                 "string",
                                 "the official name of the source of funding of this project"
                              ],
                              "metagenomes" : [
                                 "list",
                                 [
                                    "reference metagenome",
                                    "a list of references to the related metagenome objects"
                                 ]
                              ],
                              "id" : [
                                 "string",
                                 "unique object identifier"
                              ],
                              "version" : [
                                 "integer",
                                 "version of the object"
                              ],
                              "samples" : [
                                 "list",
                                 [
                                    "reference sample",
                                    "a list of references to the related sample objects"
                                 ]
                              ],
                              "description" : [
                                 "string",
                                 "a short, comprehensive description of the project"
                              ]
                           },
                           "list of the project objects"
                        ]
                     ]
                  ],
                  "limit" : [
                     "integer",
                     "maximum number of data items returned, default is 10"
                  ]
               },
               "example" : [
                  "http://kbase.us/services/communities/1/project?limit=20&order=name",
                  "retrieve the first 20 projects ordered by name"
               ]
            },
            {
               "request" : "http://kbase.us/services/communities/1/project/{ID}",
               "type" : "synchronous",
               "method" : "GET",
               "name" : "instance",
               "attributes" : {
                  "libraries" : [
                     "list",
                     [
                        "reference library",
                        "a list of references to the related library objects"
                     ]
                  ],
                  "metadata" : [
                     "hash",
                     "key value pairs describing metadata"
                  ],
                  "name" : [
                     "string",
                     "human readable identifier"
                  ],
                  "pi" : [
                     "string",
                     "the first and last name of the principal investigator of the project"
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "status" : [
                     "cv",
                     [
                        [
                           "public",
                           "object is public"
                        ],
                        [
                           "private",
                           "object is private"
                        ]
                     ]
                  ],
                  "created" : [
                     "date",
                     "time the object was first created"
                  ],
                  "metagenomes" : [
                     "list",
                     [
                        "reference metagenome",
                        "a list of references to the related metagenome objects"
                     ]
                  ],
                  "funding_source" : [
                     "string",
                     "the official name of the source of funding of this project"
                  ],
                  "description" : [
                     "string",
                     "a short, comprehensive description of the project"
                  ],
                  "samples" : [
                     "list",
                     [
                        "reference sample",
                        "a list of references to the related sample objects"
                     ]
                  ],
                  "id" : [
                     "string",
                     "unique object identifier"
                  ],
                  "version" : [
                     "integer",
                     "version of the object"
                  ]
               },
               "example" : [
                  "http://kbase.us/services/communities/1/project/mgp128?verbosity=full",
                  "retrieve all data for project mgp128"
               ],
               "description" : "Returns a single data object.",
               "parameters" : {
                  "body" : {},
                  "required" : {
                     "id" : [
                        "string",
                        "unique object identifier"
                     ]
                  },
                  "options" : {
                     "verbosity" : [
                        "cv",
                        [
                           [
                              "minimal",
                              "returns only minimal information"
                           ],
                           [
                              "verbose",
                              "returns all metadata"
                           ],
                           [
                              "full",
                              "returns all metadata and references"
                           ]
                        ]
                     ]
                  }
               }
            }
         ],
         "type" : "object",
         "description" : "A project is a composition of samples, libraries and metagenomes being analyzed in a global context.",
         "url" : "http://kbase.us/services/communities/1/project",
         "name" : "project",
         "documentation" : "http://kbase.us/services/communities/1/api.html#project"
      },
      {
         "url" : "http://kbase.us/services/communities/1/sample",
         "type" : "object",
         "description" : "A metagenomic sample from some environment.",
         "requests" : [
            {
               "description" : "Returns description of parameters and attributes.",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/sample",
               "method" : "GET",
               "parameters" : {
                  "required" : {},
                  "options" : {},
                  "body" : {}
               },
               "attributes" : "self",
               "name" : "info"
            },
            {
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/sample",
               "method" : "GET",
               "attributes" : {
                  "limit" : [
                     "integer",
                     "maximum number of data items returned, default is 10"
                  ],
                  "data" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "metagenomes" : [
                                 "list",
                                 [
                                    "reference metagenome",
                                    "a list of references to the related metagenome objects"
                                 ]
                              ],
                              "env_package" : [
                                 "object",
                                 [
                                    {
                                       "metadata" : [
                                          "hash",
                                          "key value pairs describing metadata"
                                       ],
                                       "name" : [
                                          "string",
                                          "name of the package"
                                       ],
                                       "created" : [
                                          "date",
                                          "creation date"
                                       ],
                                       "id" : [
                                          "string",
                                          "unique package identifier"
                                       ],
                                       "type" : [
                                          "string",
                                          "package type"
                                       ]
                                    },
                                    "environmental package object"
                                 ]
                              ],
                              "id" : [
                                 "string",
                                 "unique object identifier"
                              ],
                              "version" : [
                                 "integer",
                                 "version of the object"
                              ],
                              "name" : [
                                 "string",
                                 "human readable identifier"
                              ],
                              "project" : [
                                 "reference project",
                                 "reference to the project of this sample"
                              ],
                              "metadata" : [
                                 "hash",
                                 "key value pairs describing metadata"
                              ],
                              "libraries" : [
                                 "list",
                                 [
                                    "reference library",
                                    "a list of references to the related library objects"
                                 ]
                              ],
                              "created" : [
                                 "date",
                                 "time the object was first created"
                              ],
                              "url" : [
                                 "uri",
                                 "resource location of this object instance"
                              ]
                           },
                           "list of sample objects"
                        ]
                     ]
                  ],
                  "next" : [
                     "uri",
                     "link to the previous set or null if this is the first set"
                  ],
                  "prev" : [
                     "uri",
                     "link to the next set or null if this is the last set"
                  ],
                  "order" : [
                     "string",
                     "name of the attribute the returned data is ordered by"
                  ],
                  "offset" : [
                     "integer",
                     "zero based index of the first returned data item"
                  ],
                  "total_count" : [
                     "integer",
                     "total number of available data items"
                  ]
               },
               "example" : [
                  "http://kbase.us/services/communities/1/sample?limit=20&order=name",
                  "retrieve the first 20 samples ordered by name"
               ],
               "name" : "query",
               "description" : "Returns a set of data matching the query criteria.",
               "parameters" : {
                  "options" : {
                     "limit" : [
                        "integer",
                        "maximum number of items requested"
                     ],
                     "order" : [
                        "cv",
                        [
                           [
                              "id",
                              "return data objects ordered by id"
                           ],
                           [
                              "name",
                              "return data objects ordered by name"
                           ]
                        ]
                     ],
                     "offset" : [
                        "integer",
                        "zero based index of the first data object to be returned"
                     ]
                  },
                  "required" : {},
                  "body" : {}
               }
            },
            {
               "attributes" : {
                  "id" : [
                     "string",
                     "unique object identifier"
                  ],
                  "version" : [
                     "integer",
                     "version of the object"
                  ],
                  "metagenomes" : [
                     "list",
                     [
                        "reference metagenome",
                        "a list of references to the related metagenome objects"
                     ]
                  ],
                  "env_package" : [
                     "object",
                     [
                        {
                           "metadata" : [
                              "hash",
                              "key value pairs describing metadata"
                           ],
                           "name" : [
                              "string",
                              "name of the package"
                           ],
                           "type" : [
                              "string",
                              "package type"
                           ],
                           "created" : [
                              "date",
                              "creation date"
                           ],
                           "id" : [
                              "string",
                              "unique package identifier"
                           ]
                        },
                        "environmental package object"
                     ]
                  ],
                  "created" : [
                     "date",
                     "time the object was first created"
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "metadata" : [
                     "hash",
                     "key value pairs describing metadata"
                  ],
                  "project" : [
                     "reference project",
                     "reference to the project of this sample"
                  ],
                  "name" : [
                     "string",
                     "human readable identifier"
                  ],
                  "libraries" : [
                     "list",
                     [
                        "reference library",
                        "a list of references to the related library objects"
                     ]
                  ]
               },
               "example" : [
                  "http://kbase.us/services/communities/1/sample/mgs25823?verbosity=full",
                  "retrieve all data for sample mgs25823"
               ],
               "name" : "instance",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/sample/{ID}",
               "method" : "GET",
               "description" : "Returns a single data object.",
               "parameters" : {
                  "body" : {},
                  "required" : {
                     "id" : [
                        "string",
                        "unique object identifier"
                     ]
                  },
                  "options" : {
                     "verbosity" : [
                        "cv",
                        [
                           [
                              "minimal",
                              "returns only minimal information"
                           ],
                           [
                              "verbose",
                              "returns all metadata"
                           ],
                           [
                              "full",
                              "returns all metadata and references"
                           ]
                        ]
                     ]
                  }
               }
            }
         ],
         "documentation" : "http://kbase.us/services/communities/1/api.html#sample",
         "name" : "sample"
      },
      {
         "requests" : [
            {
               "name" : "info",
               "attributes" : "self",
               "request" : "http://kbase.us/services/communities/1/server",
               "type" : "synchronous",
               "description" : "Returns the server information.",
               "parameters" : {
                  "options" : {},
                  "required" : {},
                  "body" : {}
               },
               "method" : "GET"
            },
            {
               "parameters" : {
                  "required" : {
                     "id" : [
                        "string",
                        "unique server ID"
                     ]
                  },
                  "options" : {},
                  "body" : {}
               },
               "description" : "Returns a single user object.",
               "example" : [
                  "curl -X GET \"http://kbase.us/services/communities/1/server/MG-RAST\"",
                  "info for the MG-RAST server"
               ],
               "attributes" : {
                  "id" : [
                     "string",
                     "unique identifier of this server"
                  ],
                  "version" : [
                     "string",
                     "version number of the server"
                  ],
                  "public_metagenomes" : [
                     "integer",
                     "total number of public metagenomes"
                  ],
                  "metagenomes" : [
                     "integer",
                     "total number of metagenomes"
                  ],
                  "basepairs" : [
                     "integer",
                     "total number of basepairs"
                  ],
                  "info" : [
                     "string",
                     "informational text, i.e. downtime warnings"
                  ],
                  "url" : [
                     "uri",
                     "resource location of this object instance"
                  ],
                  "sequences" : [
                     "integer",
                     "total number of sequences"
                  ],
                  "status" : [
                     "string",
                     "status of the server"
                  ]
               },
               "name" : "instance",
               "method" : "GET",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/server/{ID}"
            }
         ],
         "description" : "The server resource returns information about a server.",
         "url" : "http://kbase.us/services/communities/1/server",
         "type" : "object",
         "documentation" : "http://kbase.us/services/communities/1/api.html#server",
         "name" : "server"
      },
      {
         "name" : "submission",
         "documentation" : "http://kbase.us/services/communities/1/api.html#submission",
         "requests" : [
            {
               "method" : "GET",
               "parameters" : {
                  "body" : {},
                  "required" : {},
                  "options" : {}
               },
               "type" : "synchronous",
               "description" : "Returns description of parameters and attributes.",
               "request" : "http://kbase.us/services/communities/1/submission",
               "attributes" : "self",
               "name" : "info"
            },
            {
               "parameters" : {
                  "required" : {
                     "auth" : [
                        "string",
                        "unique string of text generated by MG-RAST for your account"
                     ]
                  },
                  "options" : {},
                  "body" : {}
               },
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/submission/list",
               "description" : "list all submissions by user",
               "type" : "synchronous",
               "name" : "list",
               "attributes" : {
                  "submissions" : [
                     "list",
                     [
                        "object",
                        [
                           {
                              "id" : [
                                 "string",
                                 "RFC 4122 UUID for submission"
                              ],
                              "status" : [
                                 "string",
                                 "status of submission"
                              ],
                              "type" : [
                                 "string",
                                 "type of submission"
                              ],
                              "timestamp" : [
                                 "string",
                                 "timestamp of submission creation"
                              ]
                           },
                           "submission object"
                        ]
                     ]
                  ],
                  "user" : [
                     "string",
                     "user id"
                  ],
                  "timestamp" : [
                     "string",
                     "timestamp for return of this query"
                  ]
               }
            },
            {
               "parameters" : {
                  "options" : {
                     "full" : [
                        "boolean",
                        "if true show full document of running jobs, default is summary"
                     ]
                  },
                  "required" : {
                     "auth" : [
                        "string",
                        "unique string of text generated by MG-RAST for your account"
                     ],
                     "uuid" : [
                        "string",
                        "RFC 4122 UUID for submission"
                     ]
                  },
                  "body" : {}
               },
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/submission/{UUID}",
               "description" : "get status of submission from ID",
               "type" : "synchronous",
               "name" : "status",
               "attributes" : {
                  "id" : [
                     "string",
                     "RFC 4122 UUID for submission"
                  ],
                  "status" : [
                     "string",
                     "status message"
                  ],
                  "user" : [
                     "string",
                     "user id"
                  ],
                  "timestamp" : [
                     "string",
                     "timestamp for return of this query"
                  ]
               }
            },
            {
               "attributes" : {
                  "id" : [
                     "string",
                     "RFC 4122 UUID for submission"
                  ],
                  "status" : [
                     "string",
                     "status message"
                  ],
                  "user" : [
                     "string",
                     "user id"
                  ],
                  "timestamp" : [
                     "string",
                     "timestamp for return of this query"
                  ]
               },
               "name" : "delete",
               "method" : "DELETE",
               "parameters" : {
                  "options" : {
                     "full" : [
                        "boolean",
                        "if true delete all files and metagenomes in mgrast for submission, default just data in inbox"
                     ]
                  },
                  "required" : {
                     "uuid" : [
                        "string",
                        "RFC 4122 UUID for submission"
                     ],
                     "auth" : [
                        "string",
                        "unique string of text generated by MG-RAST for your account"
                     ]
                  },
                  "body" : {}
               },
               "description" : "delete all files and running processes for given submission ID",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/submission/{UUID}"
            },
            {
               "description" : "start new submission",
               "type" : "asynchronous",
               "request" : "http://kbase.us/services/communities/1/submission/submit",
               "method" : "POST",
               "parameters" : {
                  "required" : {
                     "auth" : [
                        "string",
                        "unique string of text generated by MG-RAST for your account"
                     ]
                  },
                  "options" : {},
                  "body" : {
                     "retain" : [
                        "boolean",
                        "If true retain non-overlapping sequences, default is false"
                     ],
                     "metadata_file" : [
                        "string",
                        "RFC 4122 UUID for metadata file"
                     ],
                     "seq_files" : [
                        "list",
                        [
                           "string",
                           "RFC 4122 UUID for sequence file"
                        ]
                     ],
                     "priority" : [
                        "cv",
                        [
                           "never",
                           "Data will stay private (default)"
                        ],
                        [
                           "immediately",
                           "Data will be publicly accessible immediately after processing completion"
                        ],
                        [
                           "3months",
                           "Data will be publicly accessible after 3 months"
                        ],
                        [
                           "6months",
                           "Data will be publicly accessible after 6 months"
                        ],
                        [
                           "date",
                           "Data will be publicly accessible eventually"
                        ]
                     ],
                     "bowtie" : [
                        "boolean",
                        "if true run bowtie screening, default is true"
                     ],
                     "project_id" : [
                        "string",
                        "unique MG-RAST project identifier"
                     ],
                     "project_name" : [
                        "string",
                        "unique MG-RAST project name"
                     ],
                     "filter_ambig" : [
                        "boolean",
                        "if true run sequence ambiguous bp filtering, default is true"
                     ],
                     "mg_name" : [
                        "string",
                        "name of metagenome for pair-join"
                     ],
                     "dereplicate" : [
                        "boolean",
                        "if true run dereplication, default is true"
                     ],
                     "min_qual" : [
                        "int",
                        "quality threshold for low-quality bases, default is 15"
                     ],
                     "assembled" : [
                        "boolean",
                        "if true sequences are assembeled, default is false"
                     ],
                     "index_file" : [
                        "string",
                        "RFC 4122 UUID for index (barcode) file"
                     ],
                     "barcode_file" : [
                        "string",
                        "RFC 4122 UUID for barcode mapping file"
                     ],
                     "max_ambig" : [
                        "int",
                        "maximum ambiguous bps to allow through per sequence, default is 5"
                     ],
                     "screen_indexes" : [
                        "cv",
                        [
                           "h_sapiens",
                           "Homo sapiens (default)"
                        ],
                        [
                           "a_thaliana",
                           "Arabidopsis thaliana"
                        ],
                        [
                           "b_taurus",
                           "Bos taurus"
                        ],
                        [
                           "d_melanogaster",
                           "Drosophila melanogaster"
                        ],
                        [
                           "e_coli",
                           "Escherichia coli"
                        ],
                        [
                           "m_musculus",
                           "Mus musculus"
                        ],
                        [
                           "r_norvegicus",
                           "Rattus norvegicus"
                        ],
                        [
                           "s_scrofa",
                           "Sus scrofa"
                        ]
                     ],
                     "filter_ln" : [
                        "boolean",
                        "if true run sequence length filtering, default is true"
                     ],
                     "max_lqb" : [
                        "int",
                        "maximum number of low-quality bases per read, default is 5"
                     ],
                     "pair_file_2" : [
                        "string",
                        "RFC 4122 UUID for pair 2 file"
                     ],
                     "debug" : [
                        "boolean",
                        "if true return workflow document instead of submitting"
                     ],
                     "pair_file_1" : [
                        "string",
                        "RFC 4122 UUID for pair 1 file"
                     ],
                     "rc_index" : [
                        "boolean",
                        "If true barcodes in index file are reverse compliment of mapping file, default is false"
                     ],
                     "dynamic_trim" : [
                        "boolean",
                        "if true run qual score dynamic trimmer, default is true"
                     ],
                     "filter_ln_mult" : [
                        "float",
                        "sequence length filtering multiplier, default is 2.0"
                     ],
                     "multiplex_file" : [
                        "string",
                        "RFC 4122 UUID for file to demultiplex"
                     ]
                  }
               },
               "attributes" : {
                  "user" : [
                     "string",
                     "user id"
                  ],
                  "timestamp" : [
                     "string",
                     "timestamp for return of this query"
                  ],
                  "id" : [
                     "string",
                     "RFC 4122 UUID for submission"
                  ],
                  "status" : [
                     "string",
                     "status message"
                  ]
               },
               "name" : "submit"
            }
         ],
         "type" : "object",
         "description" : "submission runs input through a series of validation and pre-processing steps, then submits the results to the MG-RAST anaylsis pipeline",
         "url" : "http://kbase.us/services/communities/1/submission"
      },
      {
         "documentation" : "http://kbase.us/services/communities/1/api.html#validation",
         "name" : "validation",
         "description" : "validates templates for correct structure and data to fit a valid template",
         "url" : "http://kbase.us/services/communities/1/validation",
         "type" : "object",
         "requests" : [
            {
               "method" : "GET",
               "parameters" : {
                  "required" : {},
                  "options" : {},
                  "body" : {}
               },
               "type" : "synchronous",
               "description" : "Returns description of parameters and attributes.",
               "request" : "http://kbase.us/services/communities/1/validation",
               "attributes" : "self",
               "name" : "info"
            },
            {
               "attributes" : {
                  "error" : [
                     "array",
                     [
                        "string",
                        "array of invalid entries"
                     ]
                  ],
                  "valid" : [
                     "boolean",
                     "boolean indicating whether the examined template is valid or not"
                  ]
               },
               "example" : [
                  "http://kbase.us/services/communities/1/validation/template/",
                  "validate the communities metagenomics template"
               ],
               "name" : "template",
               "method" : "GET",
               "type" : "synchronous",
               "request" : "http://kbase.us/services/communities/1/validation/template/{ID}",
               "parameters" : {
                  "body" : {},
                  "required" : {
                     "id" : [
                        "string",
                        "SHOCK template id"
                     ]
                  },
                  "options" : {}
               },
               "description" : "Checks if the referenced JSON structure is a valid template"
            },
            {
               "parameters" : {
                  "options" : {
                     "template" : [
                        "string",
                        "SHOCK template id, default is MG-RAST metagenome metadata template"
                     ]
                  },
                  "required" : {
                     "id" : [
                        "string",
                        "SHOCK data id"
                     ]
                  },
                  "body" : {}
               },
               "description" : "Returns a single data object.",
               "method" : "GET",
               "request" : "http://kbase.us/services/communities/1/validation/data/{ID}",
               "type" : "synchronous",
               "name" : "data",
               "attributes" : {
                  "valid" : [
                     "boolean",
                     "boolean indicating whether the examined template is valid or not"
                  ],
                  "error" : [
                     "array",
                     [
                        "string",
                        "array of invalid entries"
                     ]
                  ]
               },
               "example" : [
                  "http://kbase.us/services/communities/1/validation/data/?template=",
                  "validate a JSON data structure against the MG-RAST metagenome metadata template"
               ]
            }
         ]
      }
   ]
}
